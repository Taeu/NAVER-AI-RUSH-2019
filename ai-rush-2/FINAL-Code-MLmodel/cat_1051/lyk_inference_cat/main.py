#from data_local_loader import get_data_loader
#from data_local_loader import get_data_loader
import torch
import torch.nn as nn
import torch.nn.functional as F
import torchvision.models as models
import os
import argparse
import numpy as np
import time
import datetime
import pandas as pd
import pickle

from sklearn import model_selection
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import RobustScaler

from catboost import CatBoostRegressor
import catboost

from sklearn.metrics import mean_squared_error,accuracy_score, auc, f1_score
# from sklearn.preprocessing import LabelEncoder

from data_loader import feed_infer
from evaluation import evaluation_metrics
import nsml
import keras
import math

from multiprocessing import Pool
import time
from tqdm import tqdm

from Resnet_feature_extractor import resnet_feature_extractor

from sklearn.preprocessing import LabelEncoder, MinMaxScaler
from sklearn.model_selection import KFold

print('cat-w-training')
if not nsml.IS_ON_NSML:
    DATASET_PATH = os.path.join('/airush2_temp')
    DATASET_NAME = 'airush2_temp'
    print('use local gpu...!')
    use_nsml = False
else:
    from nsml import DATASET_PATH, DATASET_NAME, NSML_NFS_OUTPUT, SESSION_NAME
    DATASET_PATH = os.path.join(nsml.DATASET_PATH)
    print('start using nsml...!')
    print('DATASET_PATH: ', DATASET_PATH)
    use_nsml = True


fixlen_feature_names_global=[]
lit_cnt_prob_list = '0.0,0.0833,0.0143,0.0,0.0909,0.0,0.0426,0.1667,0.0644,0.0,0.0,0.0,0.029,0.0,0.0,0.0,0.0,0.0414,0.0,0.0,0.0403,0.0238,0.0,0.0,0.5,0.1818,0.0226,0.2174,0.0,0.015,0.0569,0.0,0.0,0.0,0.0747,0.0,0.0,0.0714,0.0229,0.0,0.0803,0.1582,0.0,0.045,0.037,0.0278,0.0887,0.0,0.0,0.0,0.0725,0.0473,0.0,0.1501,0.0417,0.0,0.0,0.0,0.1538,0.0606,0.0754,0.0,0.0155,0.0159,0.0,0.0,0.0,0.0,0.0638,0.0667,0.0,0.0721,0.0,0.0776,0.0,0.0,0.007,0.0829,0.0,0.1911,0.0,0.1515,0.1339,0.0504,0.1055,0.0914,0.0,0.0,0.0,0.0333,0.0,0.0789,0.0303,0.1824,1.0,0.0,0.0434,0.1207,0.0,0.1189,0.0128,0.069,0.0,0.0,0.013,0.2,0.0976,0.0573,0.0,0.0,0.0227,0.0,0.0299,0.0655,0.0,0.0779,0.101,0.0,0.0,0.0,0.0645,0.058,0.1128,0.0,0.0,0.0,0.0,0.0,0.045,0.0,0.0,0.0882,0.1148,0.0,0.0,0.0204,0.0769,0.0,0.1,0.1056,0.0187,0.0,0.0315,0.0,0.0471,0.1351,0.0,0.0,0.0,0.048,0.0345,0.0,0.0,0.0531,0.0,0.0771,0.0,0.0,0.0,0.0,0.1429,0.0046,0.0602,0.0,0.0482,0.5,0.0,0.0,0.0297,0.0,0.0,0.083,0.027,0.0,0.1435,0.1034,0.0,0.0182,0.0,0.0,0.0,0.05,0.0588,0.0721,0.0741,0.0928,0.0,0.0952,0.147,0.1333,0.0,0.125,0.0,0.0909,0.1274,0.0375,0.024,0.0345,1.0,0.0,0.0,0.0,0.1266,0.1019,0.0769,0.0,0.0484,0.0,0.1842,0.0588,0.0433,0.0282,0.0526,0.0889,0.1156,0.0,0.027,0.1429,0.0984,0.086,0.0,0.0316,0.1168,0.106,0.0475,0.0558,0.0,0.1683,0.0,0.0,0.0,0.0,0.0,0.0435,0.0,0.0,0.0,0.0,0.1338,0.0271,0.0,0.0846,0.0726,0.0,0.0,0.0586,0.0,0.0649,0.0227,0.0292,0.0159,0.0,0.1009,0.3333,0.0,0.0952,0.0,0.0909,0.0714,0.0,0.0,0.0,0.1198,0.0,0.0614,0.0556,0.0,0.0115,0.2222,0.1382,0.0363,0.0,0.0,0.0,0.0,0.0,0.0909,0.0442,0.1145,0.0149,0.0,0.0417,0.0,0.0135,0.0889,0.0,0.0179,0.1481,0.0,0.0909,0.0,0.0,0.0438,0.1429,0.1005,0.013,0.0,0.0,0.0,0.0,0.0,0.1364,0.0,0.0334,0.1085,0.0,0.0,0.0,0.0488,0.0705,0.0,0.0,0.0621,1.0,0.0,0.0,0.0491,0.0,0.0771,0.063,0.0473,0.0,0.0,0.0,0.0,0.0668,0.0394,0.0786,0.0526,0.5,0.011,0.125,0.0,0.0267,0.0,0.0656,0.121,0.0,0.0,0.027,0.0,0.0455,0.1273,0.0571,0.0,0.0,0.0933,0.0,0.0435,0.0,0.1429,0.0,0.0,0.0845,0.0169,0.1943,0.0,0.0345,0.25,0.0,0.0,0.0,0.0,0.0,0.0811,0.0,0.1013,0.0,0.0,0.0,0.0,0.1601,0.0,0.048,0.1429,0.0,0.0238,0.0,0.0366,0.0,0.0,0.0,0.0,0.0,0.0588,0.0833,0.0,0.25,0.0951,0.0,0.1059,0.0,0.0,0.0769,0.0589,0.0,0.0,0.0467,0.0,0.0,0.0357,0.0,0.0276,0.1,0.0,0.1429,0.0,0.0,0.0,0.0,0.0235,0.0,0.038,0.0233,0.0513,0.0395,0.027,0.3333,0.2,0.0,0.0,0.0566,0.0,0.0,0.0239,0.0167,0.0,0.0,0.0,0.0,0.0,0.0,0.043,0.0,0.0,0.0,0.0482,0.0575,0.0,0.0,0.0,0.0588,0.0975,0.0,0.0,0.0,0.1253,0.0,0.1351,0.0461,0.0679,0.0,0.087,0.0966,0.0653,0.0,0.0,0.0,0.0,0.0,0.0,0.0466,0.0,0.0,0.1008,0.0264,0.0,0.1147,0.0484,0.1212,0.0,1.0,0.0559,0.0287,0.0284,0.0354,0.0211,0.04,0.0526,0.0526,0.073,0.103,0.75,0.0,0.0,0.0694,0.0,0.0526,0.0,0.0,0.0,0.0507,0.0934,0.1176,0.0,0.0,0.0,0.0,0.0481,0.1414,0.0,0.0149,0.5,0.0,0.0,0.0,0.0,0.0375,0.0203,0.0,0.0405,0.0,0.0,0.0,0.0171,0.0,0.0,0.0476,0.0212,0.0714,0.0,0.0,0.1111,0.0,0.0625,0.0,0.0654,0.0,0.0798,0.0,0.0,0.0378,0.0,0.0,0.0476,0.1514,0.0,0.0,0.1667,0.0103,0.0,0.0,0.0,0.0,0.0363,0.0323,0.0606,0.0667,0.0,0.0,0.0751,0.0,0.0,0.0,0.0618,0.0,0.0,0.1277,0.0,0.25,0.0472,0.1304,0.0,0.0303,0.095,0.0,0.0211,0.1667,0.0625,0.2222,0.0,0.0,0.0,0.2857,0.0,0.0664,0.0,0.0589,0.1213,0.0556,0.0909,0.0,0.0365,0.0,0.0,0.0241,0.0,0.0,0.0,0.0,0.0276,0.0,0.1527,0.0,0.0,0.0,0.0256,0.0,0.0667,0.0174,0.0,0.0,0.0,0.058,0.0145,0.0,0.1067,0.0123,0.0312,0.0,0.0,0.135,0.0,0.0,0.0,0.0,0.0,0.0,0.0769,0.0,0.1429,0.0158,0.0,0.0,0.0,0.0,0.0,0.0,0.0928,0.0652,0.1429,0.1152,0.0,0.0226,0.0,0.0778,0.0652,0.0,0.0,0.0,0.0392,0.069,0.0,0.0,0.1538,0.0,0.0751,0.0,0.0625,0.0,0.0,0.0964,0.0,0.0,0.1568,0.0658,0.0087,0.0492,0.0,0.0,0.0,0.0236,0.0,0.0,0.0334,0.0643,0.0,0.2044,0.0,0.089,0.0,0.0,0.0,0.0,0.0,0.0,0.1134,0.0,0.0,0.0757,0.0486,0.0499,0.0,0.1,0.0,0.078,0.0,0.0851,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.1383,0.0,0.054,0.0,0.0,0.0,0.0061,0.0,0.0605,0.1111,0.0,0.0446,0.0212,0.0,0.0,0.0503,0.0,0.0,0.0,0.0,0.0,0.0,0.1231,0.0,0.0,0.0,0.0,0.0,0.0227,0.2857,0.0769,0.0,0.1111,0.0809,0.0851,0.0,0.0,0.0,0.0263,0.0,0.0,0.0176,0.0,0.0,0.02,0.0,0.1058,0.094,0.0,0.0,0.0658,0.0971,0.0,0.0384,0.0588,0.0,0.0,0.0306,0.0,0.0628,0.08,0.2857,0.0821,0.134,0.1739,0.0392,0.0,0.0537,0.2,0.0408,0.0962,0.1667,0.0,0.0,0.0526,0.1111,0.1313,0.1905,0.2315,0.0,0.0,0.0441,0.0,0.0,0.25,0.1389,0.0,0.0405,0.0,0.0,0.0,0.0,0.0453,0.0,0.0099,0.0,0.0,0.0,0.0513,0.1278,0.2143,0.0,0.0,0.0269,0.1629,0.0845,0.0675,0.0,0.0619,0.0152,0.0977,0.0,0.1572,0.1,0.0929,0.0,0.0,0.0,0.0085,0.0525,0.0,0.0302,0.1331,0.0,0.0,0.0,0.0723,0.0,0.0787,0.0,0.0,0.0,0.0,0.0855,0.039,0.0142,0.1334,0.0285,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.25,0.0433,0.0,0.1538,0.0,0.3333,0.0789,0.021,0.0,0.0394,0.0588,0.0,0.0914,0.0,0.0,0.144,0.0,0.1184,0.0,0.0,0.0,0.0936,0.0,0.0,0.0,0.0,0.0,0.0769,0.004,0.0,0.02,0.0,0.0,0.1429,0.0333,0.0,0.0,0.0724,0.0,0.0,0.0504,0.0222,0.1123,0.0,0.1029,0.0625,0.0,0.0,0.0,0.0088,0.1564,0.0,0.0,0.1678,0.0,0.0,0.0,0.0,0.0,0.0,0.1298,0.0,0.0303,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0106,0.0,0.1304,0.0,0.0,0.0,0.0,0.017,0.0784,0.0,0.0,0.0,0.0,0.0377,0.1048,0.1429,0.1052,0.0278,0.2222,0.0807,0.0679,0.0,0.0256,0.0,0.0,0.0955,0.043,0.0,0.0833,0.0,0.0411,0.0,0.0,0.0,0.234,0.0313,0.0,0.0,0.0,0.0,0.0486,0.0263,0.0772,0.0,0.0,0.0799,0.0,0.1314,0.3333,0.0,0.05,0.0943,0.0378,0.0,0.0,0.1429,0.0,0.0645,0.0,0.1429,0.0211,0.05,0.5,0.0799,0.0,0.0,0.0,0.0175,0.0,0.5,0.0377,0.1187,0.0,0.0,0.1404,0.037,0.0,0.0158,0.0,0.0,0.1,0.0351,0.0,0.0754,0.0357,0.0,0.0962,0.0,0.0,0.0893,0.0,0.0,0.2162,0.0567,0.0465,0.0,0.0,0.0,0.0,0.1429,0.0,0.0449,0.0345,0.0,0.0,0.0435,0.0509,0.0525,0.5,0.0684,0.0,0.034,0.1458,0.1176,0.0383,1.0,0.3043,0.0,0.0417,0.0312,0.0645,0.0,0.0,0.0461,0.0,0.0,0.0,0.0,0.104,0.0,0.0891,0.1063,0.0,0.0565,0.131,0.0,0.0,0.0055,0.0105,0.0,0.037,0.0723,0.0,0.0,0.1002,0.027,0.0276,0.0,0.0274,0.0,0.0414,0.0,0.0,0.0936,0.0,0.0196,0.0,0.0455,0.0,0.0,0.1098,0.0,0.0,0.0865,0.0938,0.0539,0.0727,0.0,0.0,0.0,0.0404,0.0961,0.0667,0.0981,0.0,0.0,0.037,0.0368,0.0821,0.2,0.0,0.0701,0.0587,0.0283,0.0103,0.0294,0.0927,0.1056,0.0146,0.0,0.0,0.0317,0.0,0.0,0.0,0.0,0.0421,0.1429,0.0,0.03,0.0,0.0283,0.0,0.0633,0.0,0.098,0.0588,0.0,0.0,0.0435,0.0614,0.0282,0.0,0.0,0.0,0.1419,0.0,0.0,0.0227,0.1167,0.0963,0.0725,0.0536,0.036,0.0,0.0851,0.0635,0.0208,0.0,0.0435,0.0754,0.0,0.1019,0.0,0.095,0.0,0.0593,0.0856,0.029,0.1319,0.0,0.0927,0.0043,0.0,0.1133,0.0,0.0,0.0,0.0,0.0625,0.06,0.0,0.0408,0.087,0.1667,0.0,0.12,0.0153,0.0,0.0232,0.0339,0.0192,0.0,0.0648,0.0,0.0513,0.5,0.3333,0.0625,0.0621,0.0,0.0,0.2,0.1153,0.1844,0.0,0.0,0.0,0.0,0.0342,0.0,0.0829,0.0,0.0319,0.0,0.0,0.0,0.0,0.0832,0.0822,0.0,0.1034,0.0,0.1667,0.0282,0.0777,0.25,0.0,0.0,0.0566,0.0718,0.0529,0.0,0.0,0.0,0.0,0.0291,0.0,0.0,0.0167,0.0,0.0235,0.0237,0.0204,0.0207,0.0,0.0,0.0422,0.0118,0.0,0.0312,0.0,0.0,0.0221,0.0,0.0,0.0,0.0,0.0,0.0,0.047,0.0,0.0,0.0663,0.12,0.0,0.0,0.1103,0.0309,0.0,0.0648,0.0,0.0486,0.0,0.0,0.16,0.0,0.0895,0.0091,0.0,0.1875,0.0,0.0945,0.0,0.0,0.0196,0.0,0.0211,0.0676,0.0226,0.0,0.0612,0.0667,0.0,0.0,0.0,0.0,0.0288,0.1316,0.0,0.08,0.0,0.029,0.125,0.0769,0.0898,0.1508,0.0,0.05,0.0,0.0357,0.0,0.0,0.0,0.0,0.2258,0.0,0.0,0.0,0.5,0.2353,0.0,0.0,0.0,0.0,0.0575,0.0,0.0,0.0,0.0401,0.0727,0.1262,0.1387,0.0,0.0,0.0782,0.0,0.0,0.0208,0.1622,0.0,0.0,0.0,0.0,0.0,0.0217,0.0272,0.0,0.0,0.0693,0.1116,0.0142,0.0,0.0625,0.1456,0.0,0.2857,0.1429,0.0,0.0,0.1111,0.0305,0.0244,0.0638,0.0,0.0,0.2356,0.0,0.1613,0.075,0.0693,0.0,0.0443,0.0578,0.0918,0.0,0.0,0.0916,0.0,0.0868,0.0228,0.0,0.0,0.0,0.0,0.0128,0.0,0.0,0.1539,0.0,0.0,0.08,0.0594,0.0,0.0548,0.0594,0.0,0.0,0.0213,0.0787,0.0,0.0581,0.0538,0.0,0.2222,0.0,0.0,0.0,0.2371,1.0,0.018,0.0,0.1835,0.1427,0.0714,0.0561,0.1302,0.0629,0.1098,0.1918,0.0,0.0605,0.0,0.0,0.0,0.1,0.0,0.0435,0.0702,0.0712,0.0,0.0189,0.1113,0.0,0.0,0.0689,0.0,0.0,0.0239,0.1123,0.0,0.0656,0.0646,0.0,0.2526,0.0,0.062,0.0,0.0387,0.0,0.037,0.0,0.0755,0.0756,0.0532,0.122,0.0216,0.0,0.0,0.3333,0.0487,0.0,0.0,0.0,0.0,0.1081,0.0366,0.0167,0.0,0.0,0.0215,0.0,0.0609,0.0811,0.0,0.0,0.0,0.0,0.0972,0.0075,0.0,0.0,0.0625,0.0244,0.0,0.0,0.0,0.0667,0.0,0.0858,0.0,0.0,0.0,0.0,0.0127,0.0,0.0,0.0806,0.0,0.0214,0.0512,0.0712,0.0832,0.0556,0.0,0.1487,0.0791,0.0,0.0476,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.1,0.0,0.0,0.0553,0.0,0.0318,0.0135,0.0,0.1,0.1,0.0689,0.0721,0.0,0.0,0.0,0.1667,0.0857,0.1053,0.05,0.0777,0.0629,0.0266,0.0866,0.04,0.0909,0.1991,0.0,0.0526,0.0634,0.0549,0.0119,0.0245,0.0769,0.0879,0.0,0.125,0.0,0.172,0.0777,0.0,0.0483,0.1178,0.0316,0.1,1.0,0.0,0.0,0.18,0.04,0.0,0.0714,0.0642,0.0,0.0714,0.0207,0.0857,0.0,0.0,0.0,0.0,0.0592,0.1429,0.0319,0.0,0.0198,0.0,0.0,0.035,0.1538,0.0,0.0205,0.0228,0.0,0.0,0.113,0.0,0.0,0.0323,0.0,0.0,0.0,0.0254,0.1656,0.1558,0.0,0.0,0.0,0.0,0.0204,0.1313,0.0,0.2209,0.0323,0.1087,0.0,0.0,0.0,0.0,0.0452,0.0,0.0179,0.0,0.0,0.0,0.0,0.1176,0.0,0.0,0.0645,0.0,0.0,0.0448,0.0833,0.0769,0.0499,0.0,0.0,0.1333,0.0,0.0,0.0056,0.0,0.0,0.0556,0.0571,0.0278,0.0,0.0,0.0,0.0,0.0909,0.0,0.0,0.0792,1.0,0.0,0.0,0.029,0.0,0.0597,0.1364,0.0349,0.0,0.0612,0.0,0.0,0.0232,0.0,0.0593,0.0,0.0577,0.0,0.0,0.0335,0.0575,0.0,0.0,0.0,0.0828,0.0526,0.0,0.0408,0.0354,0.0267,0.0,0.0526,0.0,0.0,0.0,0.0,0.0621,0.045,0.0,0.0,0.0,0.0,0.0,0.0323,0.5,0.0419,0.0,0.0667,0.0784,0.0339,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0476,0.0,0.122,0.0,0.0352,0.0476,0.0,0.0523,0.0,0.0524,0.0,0.0,0.0,0.1429,0.1087,0.0375,0.0,0.0,0.0,0.0,0.0,0.0,0.0292,0.0,0.0,0.0733,0.0,0.0769,0.0568,0.0577,0.0349,0.1346,0.0,0.0,0.0864,0.0533,0.0,0.0,0.0,0.0,0.1038,0.0,0.0,0.0515,0.0652,0.0,0.0333,0.0,0.0,0.1511,0.0641,0.0,0.0,0.0435,0.0,0.0297,0.0469,0.147,0.093,0.0,0.0515,0.0385,0.1111,0.25,0.0,0.1111,0.1154,0.0,0.0,0.0,0.0757,0.0723,0.0,0.0,0.0,0.0281,0.0729,0.0,0.0,0.0,0.1166,0.0,0.0,0.1143,0.0,0.0259,0.0365,0.0,0.0889,0.0476,0.0692,0.0,0.0,0.0,0.0,0.0,0.0,0.0345,0.0,0.0,0.0,0.0,0.0139,0.091,0.0526,0.0515,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0455,0.0,0.0,0.0814,0.0,0.0495,0.0,0.1017,0.0743,0.0363,0.0,0.0,0.0,0.0,0.0,0.079,0.0476,0.1004,0.0181,1.0,0.0,0.0,0.0,0.0552,0.0,0.0634,0.0286,0.0131,0.0435,0.2,0.093,0.0,0.1087,0.1598,0.0,0.0,0.0,0.1667,0.1275,0.0,0.0238,0.0,0.0,0.0,0.0743,0.0398,0.0,0.0315,0.0,0.0,0.0,0.2,0.0,0.2308,0.0909,0.1166,0.0,0.0943,0.0,0.0,0.0,0.0063,0.1204,0.0,0.0,0.0534,0.0,0.1641,0.0659,0.0,0.1113,0.0,0.0645,0.0,0.0,0.2857,0.0,0.0,0.0833,0.0834,0.0,0.0242,0.029,0.0,0.0,0.0588,0.0407,0.0649,0.2,0.0,0.1139,0.0,0.0'

lll = '004c7fdc884b,004d9e06c081,006243b07ca1,00695b1e08b2,006d8b978170,008218eb7ef7,008755151439,00966b684191,00d31669d80c,00ffa5144164,0111cf9d670c,012205262331,0122341c3fd3,0125a1aeb024,0133accd9737,0193f867f995,019c6009a33a,01cebe065fa3,01dae4462058,01dc0d2072af,01e234fed982,021c7a9a7bce,0230efb1a2f1,025283ad5f4f,026745016470,02f51db88465,0343bbb9f9e2,03482ad2db10,03c5eb032321,03df1b93784b,040df7d04d83,042811b90b22,0439b92d82cd,0455735527b9,048c92d99066,048eed89a5b5,0492e64cdba1,04f2b3378305,04f32f66ed37,053339eb0c7e,057fa8d9c5a3,05d2a03b6fc4,05ed24750473,05f6e1ae6c4a,060f32817dc1,06129065820a,06163a992c49,062ec9fc58c0,06399f1590c5,063a8d4b0e7b,06425238a5e2,06516f9f1d2d,067789ab0c86,06a6828d8873,06b1bafdc206,06b54cfff9fb,071a09961c74,0736468d6772,073716244dc5,0760f3ad046a,0761b79d3a7e,07aeb0c65a85,07d3ab4cc962,07d80043bb0f,07e953c56b9f,081814e3d0a9,081853c5971d,084213b8e605,084443e2dada,084b1015f476,085818d6d422,086bcc4c803d,08859af78c11,08a2af512c10,08b33fa9f0f7,08f305897306,09a718882306,09a71c94831d,0a1d6a744acf,0a5c515306b9,0a901c5e41fe,0a9a9bc2f309,0ac5cb215acd,0acf315dbd95,0b14ba8b524f,0b3dcf6fe3c0,0b71c253dcc7,0bec4f5feec4,0bf332ee3240,0c1802e5e937,0c26acbab1a6,0c351c8751b8,0c35696f126f,0c4d0ed64adc,0c82686a63fc,0c925fd3d498,0caeac13b80f,0cb6ec7e6f2f,0cbe660e0fc0,0ce15d61f967,0d0929eda958,0d20a6b11ecd,0d64cbec23fc,0d9c863fc858,0dae492eac17,0dae9229e98f,0dc85c4c443e,0df49fd3dcf1,0dfeba02bbdf,0e08828556bb,0e3798b2f06b,0e5a46f4e956,0e7237cfea74,0e74c0267efe,0e7adc775497,0e844f4b0260,0e9b690eaaad,0efc307acb4d,0f007de8e89e,0f33ab5402e5,0f3877f33e15,0f79ca3b764f,0f8fe6b57e23,0fb493abc3b9,0fb67d5c3a4d,104b4a188dbb,1050c3c30f74,106233070f41,1063977dfe5d,106d9b22a875,107049b54182,108794ea6c71,10bb1e1bde7c,10cfbb00a124,10ef598d0090,10f05eea8c30,10ff111ec9ab,112cba3281e3,11533be18c1c,1184176f0013,1200ccaaa954,12312eaaed2a,125453c9b779,12678ba7324c,128c67a8a0e3,129456bb1483,12a6bad21d70,1332530faf38,13444c7280a9,135b2c0af605,135d237dcdc7,13bf8217be5d,140770437998,1456854ac0cb,1482e597605b,14888f314294,14a7cb6072af,15046be388cc,151b259a893f,153385e1895d,15aaf1e172e8,15e571eff70e,15f3566d639a,15fd2e01a8c8,1617afc5251d,16321f83a546,16514d8cd9a3,1662fde8a0eb,167f1200b7ea,168907e66495,16a5b19ca36e,16cf77abadfa,16df45f4f4da,1702f6f1f27d,172100d1cd98,1724777e6816,17394c3aa9d0,1749329b457d,176303bdf38c,17692bd451a9,179752352d2e,17b2969dd68c,17c92caaea73,17de6b5cb2e4,17e8499a0201,1817dec6ed5d,189541ac4f39,18d84009afda,18f078d34154,18f404f522e6,191b99169127,1923e77b9ef3,1953effdd87c,19d4547214aa,19d87bb869d5,19da7f25aaf9,1a87662bf8a5,1abae56ccd01,1ac483af3bbc,1ac56befdf5c,1b363ddd8790,1b5445639ef7,1b781f98d007,1b8043d3cfca,1bb9af645346,1bdb067e5b7e,1be38e6b0cb0,1beb98cd1fe0,1bfa8ac692a6,1bfae940e040,1c06c901e7e9,1c2ba8adc698,1c6c038e5502,1c6cd986daf5,1cfd62a4588a,1d179955d782,1d202f43cb05,1d38ba9cb358,1d3cf6f60706,1d64280bbda8,1d6dd443698f,1d9fcffd2aee,1ddf4410af6d,1df576ea17a4,1dffee8e7adc,1e26fb94d125,1e3dc8888bad,1e950292d51c,1ea60c7e9505,1f07e64464cf,1f19c7db751a,1f454950047b,1f4ff356795f,1f8dd80f3bb0,200c767d2c6d,20588565e116,20afc66c7425,2108819fd2b7,211c50b68c51,212095594257,215068ba4144,219bd5492d88,220aa4537563,220ba7b5d227,224b76bd6d3c,224cedc0c0c9,2255702002a8,22ad7d8418b9,23050595ffb6,231c33c6dff2,23495ffe85c5,2373068f42fe,23a1c88b5f99,23bcfb126d07,23d86ebb294a,23dee2b55f12,23e02301512c,23ed7f849a13,23f8a7f16bab,2458dc4a33fb,2481a45ab002,24970502777a,24d1d464115d,251c4eb11007,2528d973d976,2577b558a47b,259359db6c76,25a9477f3c74,25b0c9953a5a,25bc213ce798,25ee8afe652e,264548a0cd9c,267a024c586d,2681de8dfffc,268655470bfa,268a017c6040,2709d610aeb3,'
lll += '273734d766c2,278e94c9b7be,279a41002361,27c66f0afc0c,27d6ef114822,27d92d306a3e,2801b54b20d7,283663666a0f,285689b36cb1,28717c591598,2876ea06913a,28891f59a58d,28ac9a0aa309,28aeeb02e784,28d8936ada53,29143a9b1dd2,29441c6183f7,29c81dc013f8,2a159ca04189,2a20057148a1,2a90133c66b3,2ad27b3c1145,2aef953eea89,2aeff4c7cd54,2afb7e2d44fd,2b0bb46e7b61,2b1c4af99f9c,2b1ecd1d3823,2b205156aacf,2b3be0234f9e,2b9de663f4f3,2bbba56773c4,2bd69ba7969a,2bfa4f126f56,2c0caa78a63e,2c0ddb1afcaf,2c358254b557,2c4038fedccf,2c4b79bb5ffb,2c54f7d416ba,2cd7b23da0ea,2cda4aeef377,2ce597f5d008,2d0d3d0bd826,2d448594553d,2d74e3932b36,2d7cf162cd23,2d83bc00502d,2d9143a2c048,2dce71a5e251,2e0bc87f29ac,2e1e8957f108,2e327275933f,2e487d73c82f,2e6c29a3ee93,2e78619f712d,2e7d254f45ec,2eb1bd280215,2ee85d4874a9,2f0ec6618455,2f132a85a7d2,2f1fe4b71759,2f2d584a67c2,2f406ce216e8,2f6139c6b61e,2f8e9f3112ac,2fb4cdb1fe4c,2fbaf42b8363,2fd1a77c3103,300b4e376c54,30178f800833,3026426ea1cc,302a23f0d7ba,303d9dd9d1ac,307cee5c2b3d,30898865b0c1,308b444b2a1b,308c474e5f2c,309d2aa34f18,30a356368837,30b7d757c858,30d07f5c16dd,30d4121bb97c,30dce553d388,30f1837c2432,312b6b7a6760,3151ce609206,316568bbffe2,31cd95b7f50c,32372da84af7,32584e97e6f2,329000893980,32cd3c7dbf0b,32de80fee26a,333a595b31f8,335f28ef6222,3385da5e04e2,338dd7c5f076,33cdce29aeca,33d56bfae208,33f081b73f64,3430ff15798e,34351c44c014,34432b6f7fce,345260232086,347281450e2f,347d29f0e0ca,34a290ae00fb,34abb3650f7e,3500459dc67c,35010455c400,358557698b7c,35ac3949399c,35eae24dd04b,35f8ca4fc73c,35fbda96100c,360bb2889a65,3665ca67d16d,369d8c66cdfa,36a938477642,36d9adb79d3b,36e0c3e2d730,3717b603c4cf,373b70eafe74,379a166d1273,37a2d827e370,37a7ae6bf780,37af6c97924c,37b453134c85,37ec614e6b82,38319364dac1,384c8419d5cd,385dc80a01f9,38828a108ee4,38849f1fccb2,3884b0c87546,38cde55a931c,38d36014d8bd,38e53b9aacdb,38f41bb456e6,3929d70f4e50,393641d80310,393f7ab284db,3978534603cb,397ac7fbccb3,397e3f869c89,3980244839ba,39c0d9cc071b,39c3092e1c5b,3a0fd36b2f37,3a3f5b5d4a92,3a745ad2ab8f,3a80402936a3,3a842c52f4cb,3accdc497386,3b006fc4fe6c,3b38e602afc7,3b398d359802,3b5d1ba522bb,3b91909a89a5,3b9a91c7168c,3be227b77dec,3bec231517b1,3c3c3dfa9b56,3c3f6b99fda3,3c4b7980fd2b,3c5dc4138052,3c6bd0a11c1a,3c9091ecefcb,3cf359f05649,3cfce7d8f049,3d10c6864aa5,3d25b9caa11b,3d55221e6dc2,3d5cf7d1c8e7,3d6e6fcb4149,3da5f1fd352c,3dd7f7b7a2ac,3e00416b5245,3e060140c202,3e1a38cebb27,3e74994f04bf,3e856a42d196,3ead3308df52,3ed0728317a3,3f1e4dd10a6b,3f4b7139604a,3f75b9524cd6,3f7b55d0957a,3f800cf2cf2d,3f85bf30834d,3fdced1a29d9,404d8787e99c,4084e47872bb,408653ce1751,4127e0857764,413275053602,4144d5df324d,414fe97ba590,4182eabd0476,41934aa0d407,4197e292ebd0,41bca6a8ab9a,41dde0d1afc3,41e946fbd803,42485634541e,425559847fb6,4262c8e91e72,42664b3fcc0a,427b5e5be02e,42aafc997bb1,42bf1b98df64,42dc61265af2,43001fe85e94,4309a7e0dfdd,432c68ed2dac,4331c1eedfd6,4364abac22bf,43838d1754dc,43bc517f1c64,43c0f20b765b,440d24b37554,448f27be7ec0,44de26d18737,44e264f7f916,452d9806902e,457b54c2a26d,45a408e7a32e,45c302256b59,45c96f112621,45e19ca03a21,45e1c5e65c4b,46124a4353a7,46213cbac7fd,46431d340c91,46467fac3e0c,468713e52321,46929d0b540f,46ab1e3eb51f,46cf47d44b2a,46db204cfe92,46e6174a4546,471c5419e4e8,473b8aff6d9f,475a558cc5fb,47a06c71f160,47a1ef1051e3,47ba0873c736,4802b707e9c4,483a99c0d4b1,48596d27d871,487449891028,4875878e75be,489456a45e15,489facee3880,48be3ffe2f10,48c242981344,4918b9e5fcaf,494ac949f678,495bd4dd7e21,4970668624f3,4990be2f85be,49ac69579451,49c48cad3815,49d064f921cd,49db5cf3d2b0,4a0b947c7659,4a6620e1c32c,4a822d4b6eb6,4a9d42b3358e,4ac623c51141,4ac6e80de5b0,4ad50b1b0dae,4add8bf37f0a,4b0b00575349,4b190d705216,4b32f5ece6a7,4b418aa37766,4b5b58622bd8,4b6612ffb181,4b6e0d22163d,4b79f20f949f,4b7a6940d03f,4bbc235c85f0,4c0053a76909,4c063c958ef1,4c5106470dc1,4c5d7b2d3d56,4c68ab01e20a,4c6908d7a811,4c6ed58bfbfb,4c9363d6b40a,4ccfdbd777dd,4cdbb6417199,4ce3c9bd5d31,4ceb28cd9a04,4d1316071dac,4d2c0f86fffe,4d45bdaeaba8,4d5cef99da30,4d5e25f18c6f,4d7eb479defa,4dad809728aa,4db0355d22c0,4ded935761ab,4e0830a17ffe,4e108702d350,4e2d73602e48,4e3846a19849,4e7ca4f2ede5,4eace834ef2e,4eb21033132a,4efef1a99b44,4f2e4a92074b,4fb5a9faf621,4fb96586805d,4fbfc0d44d11,4fc6945836eb,500921e198e7,501e3b1454ad,506c68c20ddf,5074d93f0851,50861ec95c57,50956ec10f65,50bbf809e8ec,50cfe68d55f9,510f411fdfa4,51b3d6885a43,51cff054a8a4,51d345549c29,52020d1b9eff,521d29334e1f,527690bd5a2b,52be379b2fb6,52c77aa0fb00,52d2e73d761b,52f5c3ef71f2,52fe19a4b5ca,531078487844,5350b52e6c1c,538604367930,539e3815b099,53dab56a7396,541cfdc361b3,5434de80e9f4,545fb5448c16,54664fb02583,54778da1396b,54d021295974,550b064bf80f,5547e33aa0cb,5551dd2eedb8,555904c20672,556b3a3bea8a,55c7d7620686,55d40d55e675,55f28f9922b3,5616fefdf98f,562104faadf4,562cc6e961d0,563eda71515e,564cdb0fe58f,565e8b195877,567921d2e080,5698ebd490d3,569b4fb1dbad,56a9b6c1392c,56dfe94e4ee0,5707a22bf5fa,570a4863ff5c,572309f50639,57498e48e94a,57a55c3892c7,57a76f4f42ea,57cff4edcb74,58419301bd81,587ed84258f8,5887a9b474d8,5945b35613d0,59c2306b04db,59e8fc918d0e,59f43d5b3683,5a4ec7c4f546,5aa3ac8c2180,5ab3e6bce7a0,5ac01faef176,5ace478293b5,5aff94ad02a4,5b0e4e70d9cf,5b39143dc56e,5b6d1e9b38ce,5b6da109c2cf,5b73f5efb3ec,5b8ee487c88d,5bdd75a75472,5c4277b017d8,5ca75a5f6731,5cf0b4976ffd,5cf110543cfb,5d02c1b2f519,5d2b414c7d58,5d4270c02a16,5d53162c85a5,5d6644e7abda,5d75586ff07f,5d8d55c4aa14,5d9878339d56,5d9c4de67b15,5dc08dca028c,5dc718d57413,5df15120005d,5e024c486a15,5e02ce7fc5da,5e31c6347625,5e94946cc58b,5e9c38cee0e1,5ea350fb118a,5eac623d925c,5eb1604a611d,5eb7e487edeb,5ef506c546dc,5f21b9a2a94d,5f28cad73eb8,5f5428e82526,5f59b5cbfb3d,5f62d98e372f,5fd7543690dd,600edd6c7459,6075f6c32dde,60786ea2b79c,60a3aec22f15,6119e80a9d76,61567359306d,619d03aae8bd,61a991089571,61ce1f630ec7,61f578c0e2ec,626dd10cfb65,62cfb4e55eb1,62d421951db4,62df4af473e6,62fd457dd801,631d3d6eeb9a,633d52713392,635486478b71,6360b84a1580,63845948aac4,63a435ed28b1,63a97f67683e,63e25a734268,642bee4ce3ec,643380adecf2,645f4befa808,64b33f20732e,64cf030c92ae,64e4a3fd4a1e,64f606bb9359,652215345835,6530e59f8d71,655e5b424b5a,65bd390c6f35,65c15a8ed7d0,66205987195e,662582977dd8,66542bdce394,6656228c9c9f,666439a883f5,6665e0b5d77d,666bb50bb190,668b743836ab,66b0ba37e2ba,66c56d29e646,66c5950afa12,66f27fef108a,67478fa396ce,677c410c3689,678ad28a945a,679329164024,67a434e5ce1e,67b9d2424ab7,68040e12bfa5,683c6601126b,685e431ad36b,68947a0a5e9d,68feeb078d84,69123a97dbe9,691317d1205f,691b2b6e2f0d,6975bffc7c8c,698b8aa17fa2,69b9978bd854,69e46c422027,69f79167d855,6a14ce185a3a,6a24a7ac9174,6a2ea703c00a,6a30fa8520d9,6a393f1da78b,6a5400c3f3a3,6a7ad2dbca7d,6a813d0ac4b8,6a8b1dcd3396,6a8f18fd2194,6a9a460c5dc2,6ac232f02246,6b0bea6613aa,6b2fabfba8d5,6b44b570aaa7,6b588fcdfb07,6b747682b0a1,6b9ab6e9f5a4,6b9fa8860f97,6bb72963da0f,6bc58088175c,6bcebba9f3fc,6befe432accd,6c2e79e49504,6c52779f7290,6c53dda2d833,6c576c55a2e8,6cf3e3170774,6d10bdb0442c,6d42b1067dc9,6d86e5e59c49,6db22793453e,6dbc3e715193,6dd5f60bbc51,6e4020c1b55a,6e88169ee3fd,6ea95c36bff5,6eca9900ec18,6ecff472debd,6ed185d62dfe,6effa6f5ca51,6f0a91ff6ebf,6f7caa40535e,6fb9174e3ddd,6ff5ef30f627,6ff7d81eb9d7,70003b07f2fb,7011bfe7cb22,702e5cf193eb,703267c40022,7049337211ac,706d38b91d0a,70aa1680bec8,70aa42a6afb2,70e1cedde82f,711d8e38076b,711f45750d01,71307c33469a,713a10dcfe3b,713fdf8e8b7c,7161935cffaa,717ef5b8a3b4,718b277d3f96,719978f87d81,7199e36714d2,71a7c5394969,722cb7a86ddf,72458cd8a16a,72518984e7e2,7270c96a09d3,72a75940aa8e,72c6a88c3552,72e2bc027209,72e36fef91e0,7324b1437a5a,732f183faa5c,73962f0bf6b5,739f709ec856,73c5d9a50228,74a9ec7c0af7,74b1d9b16d0a,74d2d22dee10,7510d62fc747,75153977c0e7,7548badf1a14,757518f4a3da,75bfe29330f3,760f22e7eeea,761d2ff279b9,764bfc237630,765369e4787a,7655305189aa,7667261af473,766a11434df3,76750f10b4dd,76aa846fdc3b,771d245e4c42,7737cda930a3,77478db7d9ce,775c65f8f834,77661d8ee280,777c825c2707,7797fb994743,77a4191c2ca9,77ab99122600,77aca1865e15,77cd046f21dc,77e5b6e039c2,77f58fff71bd,7815439e5d66,7822ac70113e,782cf9107650,78778bae32f4,788fa7d2c5ae,78b1d0b048c0,78be960eb7d6,78c5c3124eb2,78c9d94899e7,78f6e82db94e,78f840f0f6ae,791be2881d19,7932a15f585a,794f17dffdc5,795b04ffc210,795f565dee29,79631268a0e9,798cb35dbd4e,79f2a940b6d4,79f4f8d30b27,7a1f8abb34ac,7a47e6459638,7a603b0e8b55,7a6ba503c717,7a755a53b862,7acba2056f1e,7ad9ed89d557,7afdf7a238c2,7b0eb1a7696c,7b0f501aa3f0,7b0fc1c3bbb2,7b190a9cca24,7b204111ade7,7b26a520b32e,7b626c626fd6,7b9afb4669f4,7bb444889f77,7be583790762,7c0b90fcb4fc,7c21a21aa452,7c231c87aaa3,7c2f1df218d4,7cb02736d2ba,7cb6417e6eb4,7cdbfed4fcf6,7ce353094cce,7ce3a5273cd2,7cf2cd421cdc,7d16ab23ea03,7d31dd8fe8f0,7d3c888019f6,7d3d6ab7740d,7d4a5a52b8d6,7d50b8a7f80c,7d78d3500cd9,7d813f74f979,7d86c289dda9,7daec9f2b31a,7dcc59375510,7dcd4b4470a1,7df420ebe6e6,7dfad497f5b7,7e2ac44e35dd,7e3829ad431f,7e4e13dd68ff,7e5b723fe3c9,7f408d817a28,7f5f7ccadf30,7f666565c8f8,7f6f0e89d6c4,7f816b069d3f,7f89891db083,7fc6f6fa444c,7fe3ec6aeaca,7fe9cf1f4a86,800f69e86502,80774a8069f1,809bc2a12dda,80ad213fed16,80d91011d51b,80dedbebee93,80f1d8c0296c,810dff385538,81677b23a8bf,816ae4f963fb,81d13f7a3cdd,81f9cf38b7f4,824116d0882a,826b3a5e4507,827a95809546,82b03d45edf0,82f2ca897bc0,83228f1d6f3a,8333de998205,833ad8725ddf,83b820e42af4,83c1925b5769,83c26d093f61,83d81fd39e33,845da3de1f46,84b03d7ad0eb,84c9fd0c7deb,84ebbd922e63,85270a430a54,8557f028be5e,857ae348642b,85c4cc0190b0,85e9113b474f,861462181b3e,863e495a265d,86540ab89c3c,865f182e02e4,86799769d762,869bfe7c03e7,870b53a4518a,8768beaa0726,876dc840e0e3,87734719d6b3,87841e4e99e0,87880fee3c0e,878afdca49ce,879b4cf084c8,882ea59ffe71,883c3076b36b,8890cb1dfefa,8895fcfa5dca,88fc2fbea807,'
lll += '89004728fa0c,891f73615b03,8963c4dcb2a8,897ef0061c38,89a1af8825d3,89c9f419ad9c,89da7bb54e02,89f3c7181b46,8a04f0292390,8a31a84de551,8a37033e9778,8a693d47090d,8a897c021838,8a990023c16a,8a9c0fdf81d2,8ac4652d7b8f,8ad228511267,8afa7e657b10,8b0ff466ddf4,8b176af4f9fd,8b1d1e631a78,8b23b9710273,8b253522d503,8b3d4cf5866a,8b545e858bed,8b807bb19943,8bab63948c94,8bdb78f20404,8be601a92ce1,8bef06ec8842,8bf99ac05485,8c08b7e6ec64,8c0d61d2e071,8c10339246ca,8c4f48a292a0,8c63cc7588c9,8c8e70743d6e,8cb3bfd3e0fa,8cb7760e77fa,8cbec27ee6bd,8cc09f8f43ca,8cc3f1a70740,8ce9325487b0,8cea4741259d,8cebb42ffb63,8d3ac9743280,8d8249369c3c,8dd38ab076e5,8de46a55b8fe,8de93f09ff52,8e2352b92634,8e303ca3fb43,8e437a20d995,8e813a9da765,8e9fdc2e166f,8ea1b39d3319,8eac37553238,8ed00aeed4cd,8edcecc47f3d,8eec27beed34,8efd30d8a727,8f04d0cf799c,8f0cf59eceee,8f0dddae19c6,8f154304fda4,8f1b31699c42,8f8e339e9ab9,8fb1d4b8a472,8fc9dbf4dc28,8fd83920de7d,8fe227977fd0,8fe3b0e305c5,90382f38806e,90a3ba5e4beb,90b6252ef8af,90d6f8fabe1c,91250a57f535,91372e8363a2,91483dd37281,9150a4f0ce6b,9160e51aaa9d,916b246e617a,91a97896af8e,91b5fcf8ed81,921c537e5d77,92368c11e130,9245d4db3410,9271c65ba187,92aa12f62d7a,9343bd33d502,939c24c1c092,93a3786c8f6e,93bf5ed88ff7,93d459fcf0d6,9405e73446d8,940b2f4776c3,94215ef31eca,94255b780940,9444cc599fda,9456231547e1,945780210a9f,948fc419333f,94a4bc8566bc,94bc04847bd7,94c18dc470e0,94c7cc0f60f2,94c7d40c9b72,94dab122b11f,94dccb5d36da,94fc44f9d376,958a2f67dece,9597737ce7ca,95bea50ec28f,95e533656940,95e5558455cf,95fb849ed9b6,960edb30f0e0,96604982e26c,966cd35129c2,96e8fb7c9d84,96ff765eee48,971750c1ca6b,972e4e986548,973bfa361f12,974f572a7bec,976cff979cb5,976ee5388184,978f08f206e5,97b996bee383,97dee3e21af1,981eee0a340c,986734f88e74,98770a997297,987842024dd4,98cf6695af2a,990702d18637,99331857f173,9936550aa654,99b10e9580c6,99b33f9de7f1,99ece8601974,9a0ba678dd77,9a1244d0da42,9a496af61128,9a8a742ae19e,9a8b3b8b2f1a,9ac1d03ee1b4,9acaff6c4815,9aea4a4fcb41,9beb1df8ca0d,9bf40df0ad63,9c133637d90a,9cb1c47898cf,9d03fa9ae799,9d245a6207a4,9d2e99a03e51,9d82cfcd451f,9d8ef57b6fe7,9d974a537f7a,9dac221f983c,9dc17bb9f18f,9dc8b827fc54,9ddb46604b22,9de5e64e7c39,9e15ed7778fa,9e22a83b8f68,9e6b0a86a1c2,9e730b5473dc,9e8a9c468779,9e98af9660bc,9ec5dac228b1,9f324f916583,9f5b1346a2a2,9f8bce53b064,9f93f3d47f90,9fb42bb114c6,9fb688dcdd7d,9fe54018590c,a0342047a43f,a0484d95690a,a059514cba70,a05994e844b9,a0655214ba22,a066619c91e3,a0890365c35d,a0b3440619d4,a10fe0a49f54,a1346fa61a57,a14ad14a63bb,a14c086dc0e6,a15f6fb719cc,a1ae7cd8cd22,a1b77e768e49,a1c0e8271b5d,a1e278becd90,a1f884c66e21,a2a662598b7c,a2cd257f0c7a,a2e16a6693aa,a31ff2b18124,a357b32f946b,a3754c322baa,a3a2ae5098be,a3a70d265197,a3b94960df5d,a3d13f08c16f,a3e01c73e3c8,a4094dbdd389,a40bd165f030,a44ebf224a35,a46306110292,a501cfa68efd,a50c3039c97c,a5631f055728,a57552e6508b,a5b8262d20d5,a5d21b02a3ce,a5e218237de4,a60b8207c44e,a65f1a5f5022,a68db13a7112,a6956ca895bb,a6b0a38a9c14,a6bc65b58fbf,a6e3bc5696e7,a6ecb9c087cc,a6f6ce07b577,a785ad42d358,a795266d05f6,a7a755d0a58d,a7ae2486cbbd,a7d32cc8637a,a7efa0ed3158,a801826e21c5,a81032ebb75c,a87214ee0c9e,a8979e888ff9,a8a351d97392,a8dba6dfdeac,a8f5574cd7c1,a9074d5151e4,a9b10f832328,a9b71e96bf0e,aa1726cef350,'
lll +='aa2d4a616576,aa31b56ecae8,aa412196258a,aa6177b7f58b,aa6215c3ca4c,aa6abe62774c,aa8ae3d13c59,aaa28a3b57e8,aabbd0624591,aae5a31514fe,ab2c1b215b4c,ab54f9d231c8,ab5d8ab1bb92,ab813b4caaab,abd38b4bd43a,abff6a98b7c6,ac0fc14dfe14,ac1ff3dd003c,ac34843ffe0e,ac83e8b41a4d,ac8a4ede064e,acb153845a8c,acbb097c2887,acc2492834b3,acc74bfaa379,acd5b2e24128,ad75b733f689,ad90521bad85,ad9bb0c5d192,adc418c4dcb6,ae12202bd2b4,ae475e06fe5c,ae9d091062c3,aead78d41e2b,aeb1ae994b05,aeb307997f9f,aec071ad5d97,aecc395db6c4,aecc3b37452b,aed36ca0dec1,af0cc92c1c16,af3700430574,af4b0cda9d4f,af5ad898c07e,af6438198d95,af6786c8cd2b,af74bf0250b1,af771e7f701c,af823d3a7931,afe08c62aeaa,afea176b60a5,b026f556572e,b03711212fdf,b069e06aab83,b07f23c57394,b0b547b7ac11,b0d0269f7ce7,b0f8b8a86def,b0f9d6939972,b19f2364f219,b1a31b6ba069,b20683449899,b236381a17be,b2461995ce31,b28d3e2586d8,b2a59e532589,b2ca096e1f5b,b2dde4065c8f,b2de5bf5bb2d,b2e19caaf26f,b320aa9269cc,b328ce865850,b3379ae9f03b,b36fd411aa0f,b39f8bd147fc,b3b4a528a019,b3b4dab25327,b3d3da12d584,b3d58f582cf9,b3e6a202089d,b41f6b968104,b43c5d6e0eb9,b44d726ae7fa,b44de903bc7b,b46175079217,b469d222d18c,b48221bd5e35,b5020a7faa31,b523ade21945,b543d0952934,b54c80b0a921,b5726e9a13e9,b582b3de182c,b59a50096000,b5a9013ec674,b5b92b6dac6c,b5c48b8254e6,b5d9c8b426e7,b5e83cc0a317,b5ffe5ebd786,b60f5c8816ff,b61a22b52bf6,b6359ddd5474,b64f5c66ab5b,b65025d4d71c,b650ceed92ce,b6626c3b50d4,b67cdaaf5da6,b6bec6e7bdfb,b6e9a82209ef,b6fb269aba2c,b7321adc620f,b7406039a9c5,b743ad350b94,b759064089e6,b7aeedc15982,b7f14dcc7398,b7f2c11c9a9f,b8350e3a0ff4,b8408de832d3,b8b384052cbe,b8d15c857439,b8e8f6969b69,b8ef895ee20a,b8f850c522d7,b906f6e9e122,b94430c4078f,b95077e9652d,b9510c9d4032,b96b2e0f25a1,b97724bcfb83,b99b02cb7876,b9aa157a5c28,b9b509fac7b0,b9bf5effa0bc,b9c31febf91b,b9e366264f68,ba53a7179847,ba66be89b149,ba673507eb99,ba81c97a5d0a,baab2fac0204,bab803979eba,bb073da7979e,bb209f49c22d,bb2266fde9ff,bb29e1a2e499,bb526f9d97f4,bb730a593c2e,bbb2cbf6bf18,bbc834c94084,bbcd8f177763,bbe3193cb857,bbf70b253df0,bc59e3f2d853,bc6a9936e450,bc7d62452143,bc7d6a9f35bc,bc7ef396af34,bca87fa19575,bcaf91a21220,bcd925f2451c,bce18bc378b5,bd292638d5b6,bd48359da3af,bd598ca72f43,bd71e8f4ac3a,bd9bb5f0f633,bdcae37688d6,bdccf137f4de,be30901524a0,be361df2d237,be4397b5f9f1,be6e06895108,be800d93ff79,be829dd8ddc0,be8576cfc7ad,bee123ee54a9,bee1965229fd,bee91800e721,bf23f380c019,bf306d314e1a,bf6e07ee4608,bf87ddef9b54,bfa1431e35d4,bfb7d2b41727,bfde563f2df4,c011bd4e19fd,c033651aad20,c0892a82147d,c09a4a75675d,c0a69e75777e,c0ba25cb838e,c0d307a0e878,c0ffa6df4d47,c10fcf022a96,c12dc753a059,c14724f8af97,c15230b477e7,c16faaf7edbc,c194e8fcb414,c1976032107d,c19b4da61b0e,c1e4ef82c923,c20280fe3da5,c20be344836c,c24aee101207,c2529f8bad1f,c27e6713541d,c2fa320b527e,c31a0d059c7e,c33585a2167a,c361c66d09bb,c36b55052c0c,c37bffc9e05d,c3a5a23a5120,c3c84f0718cf,c3ca34c2d2e5,c3ff876c48f8,c40d07a7e254,c4206d5dd042,c4420b2504fe,c4578380ef3d,c462535bceec,c4826f85335a,c49658b86324,c49f0c9438ab,c50010088bc5,c5063bc7485c,c52483759825,c52db15596d5,c550a4df4751,c5621834477f,c56e79cbb6a9,c5b75e70edf9,c5e5b20b2e15,c6333ca678cf,c648c4d19e59,c6714e58a376,c6a8d1f089fa,c6b5d7f6b3b1,c6be65282e3b,c6d09fe7122a,'
lll +='c7162e6999f7,c76d5487e5fe,c7738a5fd583,c782f501c7e7,c7c2e2e5b851,c7d6e04201f9,c8058be7d2d6,c846ab81284e,c853a569833e,c85b32ff0ea0,c86cff448a79,c8917092d6dd,c8e5fcb51d9a,c93a367d8b61,c965c3c5bc56,c97468592027,c9a8b45e11c0,c9b420da564a,c9be9e3f94c9,c9c76f6b8cbf,ca3ed2981298,ca46a9852d9a,ca633c9d923e,caba9b7181fe,caeb470c7b4b,cb2633cad640,cb43230d2f03,cb6a315d1359,cba1060b5490,cbb5b1f52011,cbc7d2680dbf,cbf24d82781d,cbfce83c0d4a,cc1b3c6ce894,cc1fcb10a59d,cc62d0aa4f16,cc877022b8ec,cc8d397a85ad,cc96d794d74d,cca0ab9e134d,ccac43090af6,cccd7e78a377,cce761f22272,ccfc8c2ac668,cd5d0d69d098,cd66d0ed1dc6,cdb9aae84067,cdc29a4df587,cdd1e4ff5850,cdf8dec5bc66,ce72d8d69003,cea063a3f639,ceaaa474b396,cebedaa2dd8a,cecc1862fcfd,cecc42e4a5a8,cefe5a1463b2,cf09de6485b7,cf1a38026f11,cf2f0a2ca0db,cf8c4c21fac0,cfafd3c987d5,d01bc626ab0d,d05d1e283f4a,d0712e5c29e3,d0aee20f9f16,d0b90d2ea589,d0c1c7628226,d0dbb4393a02,d0ff3cf8788d,d192b10934de,d237df0f1673,d24e01860721,d2587fcf4aaf,d2840e4568e7,d28ceaaccd35,d2a9c40713cc,d336ed237768,d33e6ee4dd8f,d344600b4a78,d3e544105c1a,d3f70ab08a8b,d403105269a1,d406d5c5ac2d,d42bc0562d69,d44c46d5ecbd,d45c9da5467d,d488082cf751,d4a49db693c9,d4b2295dd26a,d4b4bcd2c0b9,d4c33f7df86d,d4c377a75744,d4cf43815138,d4ea034a0aea,d573795e6cad,d59b84e95c78,d59f6091e96d,d5bdd443236c,d629d53c6c9d,d6318c75d85c,d63b71b3ea5b,d66563a074dc,d66c7093fd54,d6a028114449,d701f925af7b,d71a0a5b742e,d7358db4f905,d7366daa3485,d7853b4dd898,d7af62973bfd,d7e806995f9c,d8025cd4cfe2,d83e6fa772a4,d85ec52108f2,d8761ca60920,d87af560d81a,d888d832b1b5,d896527761d8,d8d432069c65,d91cb94c284d,d9661cb8e3d6,d98483733ad8,d9afb2975b5c,d9cc8a65467b,d9e2781e6770,d9e7dfc354eb,da23a81ece3c,da4dfb87d5d7,da786bd062cf,da87ea39f000,daa43e17ee7b,dae8c89aa3cf,db1194905bc2,db26b44fd926,db4dbfa3ee17,db62b22343de,dbb64cd751c3,dbb82c7465f4,dbbb4bdc4619,dbcff02eeebe,dbd7d7c2fd9c,dbdb23407627,dbe9d7684c7b,dbf01a1038f6,dc0af193f61c,dc38867e6155,dc5c09b2798e,dc73f15b056e,dc76c224679a,dc84af9515d8,dc90c796cfe3,dcb2dac12fa3,dcbaa7ad7d4c,dd35f6b0a9a8,dd3bd423112c,dd791ecf5266,dd8b0059c565,ddb106717dca,ddb72b23314a,dde2c32c33b4,ddeb658b10a4,de5115154e05,dea7345f98f6,deb1a031d5f0,dec374e53bef,ded32a54a9b6,df02f4495a78,df15ad9efbb9,df1d6bffa0ee,df49ccda78ba,df4bbd0a1e91,df5aac2106d9,df6f62158596,df925261ffc2,df9ae04ddbab,e05c3623d98c,e05f66a6a463,e07f0e6dde89,e0999c249637,e0bf2bf30cfd,e0c31f2ed4fe,e0c827b0b9aa,e0df0a07c50b,e109f6b16d6e,e12d4cc84237,e14431c72939,e15c36764087,e239cb0c019c,e2a5dcf0539e,e2d17c33746a,e2d7a2d3152a,e2dbb44ec95f,e310544ed62f,e370a72be3cb,e3f7b13fc0b3,e40c29049121,e4cfed781f3d,e4dcbf20951c,e55474c84305,e5599fcbc888,e55e4f5caa1c,e57c1109f671,e5c755526464,e5e885ad1537,e5eddc038dd4,e65f447edbc3,e6690f3a2244,e6793bcb3731,e6af1fd1998c,e6c877d2ae25,e738fcea8a05,e790ac117177,e79c9575d05b,e79cd2f629b5,e7a48410e535,e7a69b0326aa,e7bbef64f96c,e7c01c8e3382,e7cdc8823480,e8390e9b2780,e851f004d7bf,e85fad9b0784,e88b161e0aa1,e89a47ee22fa,e9153b0dcb5f,e9394de05221,e946906378dc,e9551347c3bd,e95a2f0ce97b,e97ed8836f58,e9bb3122a0b0,e9c12152ab57,e9f0ac037438,e9f8cd431e81,ea277121e113,ea4f4679096b,ea632dbc2f80,ea78a0a78245,ea8521b697ee,eaafa4695786,eac0fc65c0fa,eac7d11e47ef,'
lll += 'ead48cab2462,eadd227c6a13,eb0897ff63b7,eb128ba29442,eb17eda48012,eb20a0e184a8,eb29ba61ba09,eb64eab94252,ebad6a3e2b95,ebb944878b3b,ebba9f2954a8,ebc4f1d75608,ebcc0465a8cb,ec2554421279,ec351d10b595,ec50c6c380f4,ec5ba3fafe06,ec70568761d0,eca320c6ddbe,ecc0c2aaf610,ecd36b999bd6,ece18b117a59,ece329fb4737,ecf3e4e042fb,ed173d87cf27,ed279c8cf61a,ed3556b79237,ed3e3babe77d,edb0e0dcfc0c,edb4d09eddde,edbf5ab2b7af,edc8074b8cac,edffeb6c448d,ee03fe0dcca2,ee2e89cbaf15,ee2f4b6ccae0,ee61b00f1244,ee68041eec10,ee87bf88348d,eec9f3824ec0,eed1b1ca0561,eee6750dfa61,eee9c1f4222b,ef7e4793fc0a,ef98facd0cbb,efaddbf9e9da,efba218e9c44,efcb23f631db,f00c857ff074,f0119dce4306,f0279a582893,f038bca1ab40,f057ed3b31bf,f0633e94df52,f0b54b32a6ce,f153726b5f0f,f158892a8f01,f16cc7686c2e,f17e17a317e8,f187ce2ffc66,f1a37c338e8f,f1df69ba6fbe,f1e277aed42d,f1f7acac1d18,f20c89c639ca,f21adb368a5d,f2284ed9c52b,f232e277a558,f263f7febf3e,f26427b87325,f279a57f92a9,f2905afcb545,f2dfd9c704af,f2e3bf30f658,f34a1f1f1abf,f35bbe6a36c9,f368aadd41e0,f38786013cbe,f3f768b29c7b,f40d5a31931c,f40f8bb8c0cf,f429dadfec02,f4d380732f5f,f4d998f18027,f511ddd39ffd,f52b69bbd37b,f531bf515e4c,f61d5b790666,f63ba5270fe4,f64ea5fcbd0b,f6701d521020,f69ba1a51fde,f73072810050,f749e14eaf36,f773629657a7,f773e6cfec5c,f7b70545ad61,f7e9bd26aca0,f7eba7bdbca5,f7f49530f2ab,f7fd11fbe741,f80ef1b2c55f,f8435d9e9813,f877d31ae8fc,f8c3006313c2,f8fbacbccb70,f909bd69e7df,f926d690b885,f92a5a4f6509,f980d0b5b00d,f9821fe82f6a,f9a72642b160,f9b61bc2330c,f9c24a35605c,f9c2a34df0f8,f9c4d5e9bcd3,f9cbd4f680b2,f9d46fa3f184,f9d6bc12e034,fa12d15ae666,fa537c08d3b8,fad9a0b82a61,faf1a4d1d15b,fafd1a49c486,fba2ee34d2d8,fbf2dbb15084,fbf5eea9cdea,fc0b3f94aa81,fc5389c2e046,fc5bde7617d2,fc7c10760a0e,fc9e95dbe3e1,fca5f291b8f1,fcc2af9b02c7,fcd6984032a8,fce053b43bd7,fcfa28f76ade,fd10201f874a,fd3d47f75c95,fd4199a48fc0,fd6fd865e9d3,fd8ad8a69991,fdde29fa0ee6,fe7eaf638f0a,fe8724b2a8cf,fe89c6ffb4a3,feac192d9dab,feaef0e73c5d,feefc86ee1bf,ff17113efdcc,ff178d7e5bd9,ff3952a4c5e2,ff61a63fbc96,ff7eb712d4f5,ff86e8af08fb,ffab948dced8,ffb61a463e01,ffd10ec9e16b,ffd2f06ae744,ffee974c9d39'
print(len(lll))
lll.replace(' ','')
lll.replace('\n','')
lll = lll.split(',')
print(len(lll))

read_cnt_list = '1 9 1 12 2 139 15 12 4324 40 1 2 3 5 10 19 18 1 3 51 28 9 57 1 431 227 316 284 3347 2 10 23 6 1 3 1 88 66 3 129 138 5 279 7 52 16 3 3 5 1089 1 2226 7 1924 1 6 3 1 277 64 333 4 1052 68 119 4 26 38 5 6 161 12 1 1 154 178 13 19 5 254 90 6 115 2 1 1263 4 1 13 59 1 33 18 2 1 3 96 10 282 437 212 4 1 1 20 6 417 2 2 412 262 64 233 7 34 18 119 4 4 49 93 1 12 32 1271 487 23 140 128 120 1 397 360 522 124 13 17 2 14 1 126 1 2 26 1 101 59 1 1 2 34 9 1 72 154 1 1 243 4 437 16 1 77 1 265 1 3 23 211 6 107 9 1 1108 131 17 53 27 11 47 1 1 102 19 50 12 126 1 830 35 4 183 2 1 6 165 75 7 1 3 32 139 270 1 297 14 1 1 1 2924 36 1 242 73 1 21 1 1 101 3 3 2 3 12 1 1 952 54 1 130 158 71 2 27 461 25 226 1493 6 46 62 25 26 7 39 3 4 1 1065 44 2944 813 296 3 1 3 17 45 3 12 1 355 259 2 23 121 6 1 41 3 3 6 1 9 68 3 1 92 726 252 68 53 4 1 876 1641 2 1 2707 78 90 1 11 3 1 92 7 1 1 2 2 2066 31 1874 14 1 5 2 11 69 1 1 3 63 109 32 6 524 22 522 1 13 9 107 3 138 12 216 62 1200 4 2 64 1 61 117 48 1 229 14 118 233 46 1862 11 14 690 20 1 833 8 26 21 1 48 1 1091 103 28 8 1033 2 1 6 36 20 4 23 1 5926 41 3355 34 287 1 3 1162 2 2 484 13 4 4 242 1 2 10 1 2 1 21 4 25 911 3 5 3 662 1 10 29 6 392 39585 12 113 122 28 43 102 1 50 1 137 6 134 6 47 43 3 3 196 123 2 1616 2 2 278 126 19 2 112 606 29 447 1 1 1 2 9 220 118 123 21 28 8 2 38 122 27 368 1 3 81 4 48 13 1 882 3 4 171 45 5 15 22 1 2566 22 17 111 31 39 989 165 2 1498 30 716 1 2 1 81 1 1 23 233 1 2 26 8 1 15 1 2 306 2 5 1333 8 200 6 1 475 3 1 571 17 1 116 5 7 4 2357 1 7 2 1 2 76 120 1054 1220 48 149 2 2 387 129 60 1 92 17 29 416 6 5 9 124 42 26 85 71 27 1 52 1 12 59 1 79 21 527 2 1 210 140 48 25 257 1 6 8 716 5 80 1 61 586 197 37 159 39 344 25 149 78 242 2 14 856 102 402 8 35 13 19 301 2 684 1 3 40 1977 1 3 7 227 4 109 7 2 1 1 1 21 2 993 71 5 16 1107 842 94 18 1 1991 442 1 50 15 47 99 1 66 1744 177 604 208 3 156 3 118 39 3 46 76 7 372 8 249 1 3 29 2 4 324 1327 3 2 941 15 14 448 5 1 36 122 6 11 7 4 4 927 11 4 41 85 73 1 6 2 125 97 54 2 1 15 2 1 1 20 2 352 41 5 3 19 21 23 38 239 241 1277 67 1005 2 356 55 55 1 1185 9 843 4 166 1 2 20 102 4 28 50 77 9 14 13 2 2 4 22 17 297 157 1846 119 4 117 24 51 760 3 4 9 63 5 949 1 320 4 6 125 26 378 83 7 1 1 46 1 557 2 559 1062 68 66 508 2 1827 33 8 1 107 1842 2 1 1 67 811 1 3 2 1 15 2231 984 87 1 1 43 3 18 5 4 29 2 444 1 16 73 13 61 6 4 3 27 1 1 7 2 612 3 549 2 48 2 387 6 3 1323 13 1 17 665 24 1 13 19 18 5 246 1 2 6 6 1 5 257 2 2 1 2 3 1 339 1 2 4 3 174 3 21 47 3 1499 61 81 1 276 7 21 1 40 156 4 1 23 1 75 2 1 5 427 2 70 163 2 5 80 153 104 1 190 3 1517 70 612 187 287 812 6 1 60 5 5 424 3 209 4 151 1 1 4 25 6 98 20706 171 105 47 164 45 11 16 322 1056 6 1 190 1 93 1 3 24 24 1723 20 7 32 1 24 42 1 394 80 9 4 1 1 173 30 78 1 26 1 166 133 76 3 3 2 293 10 1 33 7 42 223 156 76 2 1 136 501 6 6 17 116 1 9 '
read_cnt_list = read_cnt_list.split(' ')[:-1]
read_cnt_list = [int(x) for x in read_cnt_list]
print(len(read_cnt_list))

read_cnt_artic_list = '004d9e06c081 006243b07ca1 006d8b978170 008755151439 00966b684191 00d31669d80c 0122341c3fd3 01cebe065fa3 01e234fed982 021c7a9a7bce 026745016470 02f51db88465 0343bbb9f9e2 03482ad2db10 03df1b93784b 040df7d04d83 048c92d99066 04f2b3378305 04f32f66ed37 057fa8d9c5a3 05d2a03b6fc4 05f6e1ae6c4a 060f32817dc1 06129065820a 06163a992c49 06425238a5e2 06516f9f1d2d 06a6828d8873 06b1bafdc206 073716244dc5 0760f3ad046a 0761b79d3a7e 07d3ab4cc962 07d80043bb0f 084443e2dada 084b1015f476 086bcc4c803d 08a2af512c10 09a718882306 09a71c94831d 0a5c515306b9 0a9a9bc2f309 0ac5cb215acd 0acf315dbd95 0b14ba8b524f 0b3dcf6fe3c0 0c1802e5e937 0c351c8751b8 0c35696f126f 0c4d0ed64adc 0c82686a63fc 0caeac13b80f 0cb6ec7e6f2f 0ce15d61f967 0d0929eda958 0d20a6b11ecd 0dae492eac17 0dae9229e98f 0dc85c4c443e 0df49fd3dcf1 0e3798b2f06b 0e7237cfea74 0e74c0267efe 0e844f4b0260 0e9b690eaaad 0f3877f33e15 0f79ca3b764f 0f8fe6b57e23 1063977dfe5d 108794ea6c71 10bb1e1bde7c 10f05eea8c30 10ff111ec9ab 11533be18c1c 1184176f0013 1200ccaaa954 125453c9b779 128c67a8a0e3 129456bb1483 135b2c0af605 135d237dcdc7 1456854ac0cb 14888f314294 15aaf1e172e8 15e571eff70e 15f3566d639a 1617afc5251d 16321f83a546 167f1200b7ea 16cf77abadfa 16df45f4f4da 172100d1cd98 1724777e6816 1749329b457d 17b2969dd68c 17c92caaea73 17de6b5cb2e4 17e8499a0201 1817dec6ed5d 18d84009afda 18f078d34154 18f404f522e6 1923e77b9ef3 19d4547214aa 19d87bb869d5 19da7f25aaf9 1a87662bf8a5 1abae56ccd01 1ac483af3bbc 1b781f98d007 1b8043d3cfca 1bb9af645346 1be38e6b0cb0 1bfa8ac692a6 1bfae940e040 1c06c901e7e9 1c2ba8adc698 1c6c038e5502 1c6cd986daf5 1cfd62a4588a 1d202f43cb05 1d38ba9cb358 1d3cf6f60706 1d64280bbda8 1d9fcffd2aee 1ddf4410af6d 1df576ea17a4 1dffee8e7adc 1e26fb94d125 1e950292d51c 1f8dd80f3bb0 211c50b68c51 212095594257 219bd5492d88 220aa4537563 224cedc0c0c9 22ad7d8418b9 23050595ffb6 231c33c6dff2 23495ffe85c5 23a1c88b5f99 23bcfb126d07 23dee2b55f12 23ed7f849a13 23f8a7f16bab 24d1d464115d 2528d973d976 2577b558a47b 25a9477f3c74 25b0c9953a5a 25bc213ce798 25ee8afe652e 2709d610aeb3 273734d766c2 278e94c9b7be 279a41002361 27d6ef114822 2801b54b20d7 283663666a0f 28717c591598 2876ea06913a 28ac9a0aa309 29143a9b1dd2 29441c6183f7 29c81dc013f8 2a159ca04189 2afb7e2d44fd 2b1c4af99f9c 2b1ecd1d3823 2bbba56773c4 2bd69ba7969a 2c0ddb1afcaf 2c358254b557 2c54f7d416ba 2cda4aeef377 2ce597f5d008 2d0d3d0bd826 2d9143a2c048 2dce71a5e251 2e0bc87f29ac 2e1e8957f108 2e327275933f 2e487d73c82f 2e6c29a3ee93 2e7d254f45ec 2ee85d4874a9 2f0ec6618455 2f2d584a67c2 2f6139c6b61e 2f8e9f3112ac 2fb4cdb1fe4c 300b4e376c54 3026426ea1cc 303d9dd9d1ac 308b444b2a1b 308c474e5f2c 309d2aa34f18 30b7d757c858 30d07f5c16dd 316568bbffe2 32372da84af7 333a595b31f8 3385da5e04e2 338dd7c5f076 33d56bfae208 3430ff15798e 34a290ae00fb 34abb3650f7e 35010455c400 358557698b7c 35eae24dd04b 360bb2889a65 3665ca67d16d 36d9adb79d3b 373b70eafe74 37a2d827e370 37a7ae6bf780 37b453134c85 38828a108ee4 3884b0c87546 38cde55a931c 38d36014d8bd 38e53b9aacdb 38f41bb456e6 3929d70f4e50 393641d80310 397ac7fbccb3 39c0d9cc071b 39c3092e1c5b 3b006fc4fe6c 3b91909a89a5 3b9a91c7168c 3c3f6b99fda3 3c4b7980fd2b 3cf359f05649 3d10c6864aa5 3d25b9caa11b 3d55221e6dc2 3d6e6fcb4149 3da5f1fd352c 3dd7f7b7a2ac 3ed0728317a3 3f75b9524cd6 3f7b55d0957a 3f85bf30834d 3fdced1a29d9 404d8787e99c 408653ce1751 4127e0857764 413275053602 4144d5df324d 414fe97ba590 4182eabd0476 41934aa0d407 4197e292ebd0 41bca6a8ab9a 41dde0d1afc3 41e946fbd803 42485634541e 42664b3fcc0a 42aafc997bb1 4309a7e0dfdd 432c68ed2dac 4331c1eedfd6 440d24b37554 448f27be7ec0 44e264f7f916 452d9806902e 45e19ca03a21 45e1c5e65c4b 46213cbac7fd 46929d0b540f 46db204cfe92 46e6174a4546 471c5419e4e8 47a06c71f160 47ba0873c736 483a99c0d4b1 487449891028 489facee3880 4918b9e5fcaf 494ac949f678 4990be2f85be 49ac69579451 4a6620e1c32c 4a822d4b6eb6 4a9d42b3358e 4ac623c51141 4add8bf37f0a 4b418aa37766 4b6e0d22163d 4b7a6940d03f 4bbc235c85f0 4c0053a76909 4c5106470dc1 4c5d7b2d3d56 4c6908d7a811 4c6ed58bfbfb 4c9363d6b40a 4ccfdbd777dd 4d1316071dac 4d45bdaeaba8 4d5e25f18c6f 4d7eb479defa 4dad809728aa 4db0355d22c0 4e0830a17ffe 4e3846a19849 4f2e4a92074b 4fb96586805d 501e3b1454ad 5074d93f0851 50861ec95c57 510f411fdfa4 51b3d6885a43 51d345549c29 52020d1b9eff 521d29334e1f 52c77aa0fb00 539e3815b099 541cfdc361b3 5434de80e9f4 5551dd2eedb8 555904c20672 556b3a3bea8a 55c7d7620686 55f28f9922b3 562104faadf4 562cc6e961d0 567921d2e080 5698ebd490d3 56dfe94e4ee0 570a4863ff5c 57498e48e94a 57cff4edcb74 5887a9b474d8 5945b35613d0 59c2306b04db 59e8fc918d0e 5ab3e6bce7a0 5aff94ad02a4 5b0e4e70d9cf 5b6d1e9b38ce 5b73f5efb3ec 5d02c1b2f519 5d53162c85a5 5d6644e7abda 5d75586ff07f 5d9878339d56 5dc08dca028c 5df15120005d 5eb1604a611d 5ef506c546dc 5f59b5cbfb3d 5fd7543690dd 600edd6c7459 60786ea2b79c 60a3aec22f15 619d03aae8bd 62df4af473e6 63845948aac4 63a435ed28b1 63a97f67683e 642bee4ce3ec 643380adecf2 645f4befa808 64f606bb9359 655e5b424b5a 66205987195e 66542bdce394 6656228c9c9f 666bb50bb190 668b743836ab 66c56d29e646 66c5950afa12 677c410c3689 679329164024 67a434e5ce1e 67b9d2424ab7 68040e12bfa5 683c6601126b 685e431ad36b 68947a0a5e9d 69123a97dbe9 691317d1205f 691b2b6e2f0d 6975bffc7c8c 698b8aa17fa2 69f79167d855 6a14ce185a3a 6a24a7ac9174 6a2ea703c00a 6a30fa8520d9 6a7ad2dbca7d 6a8f18fd2194 6a9a460c5dc2 6b0bea6613aa 6b9ab6e9f5a4 6bb72963da0f 6c2e79e49504 6c52779f7290 6c53dda2d833 6d10bdb0442c 6d42b1067dc9 6d86e5e59c49 6db22793453e 6dd5f60bbc51 6e4020c1b55a 6e88169ee3fd 6eca9900ec18 6ecff472debd 6ed185d62dfe 6fb9174e3ddd 6ff5ef30f627 70003b07f2fb 7011bfe7cb22 706d38b91d0a 70aa42a6afb2 713a10dcfe3b 713fdf8e8b7c 7161935cffaa 717ef5b8a3b4 718b277d3f96 72a75940aa8e 72c6a88c3552 72e36fef91e0 732f183faa5c 73962f0bf6b5 739f709ec856 74a9ec7c0af7 74b1d9b16d0a 7510d62fc747 757518f4a3da 760f22e7eeea 7655305189aa 7737cda930a3 77478db7d9ce 77661d8ee280 77a4191c2ca9 77ab99122600 77e5b6e039c2 7822ac70113e 782cf9107650 78778bae32f4 78b1d0b048c0 78be960eb7d6 78f840f0f6ae 791be2881d19 795b04ffc210 7a47e6459638 7a6ba503c717 7b190a9cca24 7b26a520b32e 7c0b90fcb4fc 7c21a21aa452 7cdbfed4fcf6 7ce353094cce 7ce3a5273cd2 7cf2cd421cdc 7d16ab23ea03 7d31dd8fe8f0 7d3c888019f6 7d3d6ab7740d 7d50b8a7f80c 7d86c289dda9 7daec9f2b31a 7dcd4b4470a1 7dfad497f5b7 7e5b723fe3c9 7f408d817a28 7f89891db083 7fc6f6fa444c 7fe3ec6aeaca 80774a8069f1 80ad213fed16 80d91011d51b 80f1d8c0296c 810dff385538 81677b23a8bf 81f9cf38b7f4 826b3a5e4507 82b03d45edf0 82f2ca897bc0 83228f1d6f3a 8333de998205 833ad8725ddf 83d81fd39e33 84b03d7ad0eb 84c9fd0c7deb 84ebbd922e63 857ae348642b 85c4cc0190b0 861462181b3e 865f182e02e4 86799769d762 870b53a4518a 8768beaa0726 87734719d6b3 878afdca49ce 883c3076b36b 8890cb1dfefa 8895fcfa5dca 897ef0061c38 89c9f419ad9c 89da7bb54e02 8a31a84de551 8a37033e9778 8a693d47090d 8a897c021838 8a990023c16a 8ac4652d7b8f 8ad228511267 8afa7e657b10 8b0ff466ddf4 8b176af4f9fd 8b1d1e631a78 8b253522d503 8b3d4cf5866a 8b545e858bed 8bdb78f20404 8c0d61d2e071 8c4f48a292a0 8c63cc7588c9 8cb3bfd3e0fa 8cb7760e77fa 8cc3f1a70740 8ce9325487b0 8cebb42ffb63 8d3ac9743280 8de46a55b8fe 8de93f09ff52 8e2352b92634 8e437a20d995 8e9fdc2e166f 8ed00aeed4cd 8eec27beed34 8f04d0cf799c 8f154304fda4 8fb1d4b8a472 8fc9dbf4dc28 8fd83920de7d 8fe227977fd0 90b6252ef8af 90d6f8fabe1c 91250a57f535 91372e8363a2 9160e51aaa9d 916b246e617a 91a97896af8e 91b5fcf8ed81 92368c11e130 9245d4db3410 9271c65ba187 92aa12f62d7a 9343bd33d502 939c24c1c092 93a3786c8f6e 93bf5ed88ff7 940b2f4776c3 945780210a9f 948fc419333f 94bc04847bd7 94c7cc0f60f2 94dab122b11f 94fc44f9d376 958a2f67dece 95e533656940 95e5558455cf 95fb849ed9b6 96e8fb7c9d84 972e4e986548 973bfa361f12 974f572a7bec 976cff979cb5 976ee5388184 978f08f206e5 97dee3e21af1 981eee0a340c 986734f88e74 987842024dd4 98cf6695af2a 99331857f173 99b10e9580c6 99ece8601974 9a0ba678dd77 9a1244d0da42 9a496af61128 9a8b3b8b2f1a 9ac1d03ee1b4 9aea4a4fcb41 9d03fa9ae799 9d245a6207a4 9d82cfcd451f 9d8ef57b6fe7 9d974a537f7a 9dc17bb9f18f 9dc8b827fc54 9de5e64e7c39 9e15ed7778fa 9e22a83b8f68 9e730b5473dc 9e98af9660bc 9ec5dac228b1 9f324f916583 9f5b1346a2a2 9f8bce53b064 9fb688dcdd7d 9fe54018590c a0342047a43f a066619c91e3 a0b3440619d4 a1346fa61a57 a1b77e768e49 a1c0e8271b5d a1f884c66e21 a2cd257f0c7a a2e16a6693aa a31ff2b18124 a357b32f946b a3a70d265197 a3b94960df5d a3d13f08c16f a46306110292 a5631f055728 a5b8262d20d5 a5d21b02a3ce a5e218237de4 a60b8207c44e a6956ca895bb a6b0a38a9c14 a6e3bc5696e7 a785ad42d358 a81032ebb75c a8a351d97392 a8dba6dfdeac a9b10f832328 a9b71e96bf0e aa2d4a616576 aa412196258a aa6abe62774c aaa28a3b57e8 aabbd0624591 ab2c1b215b4c ab5d8ab1bb92 abff6a98b7c6 ac1ff3dd003c ac34843ffe0e ac83e8b41a4d acb153845a8c acbb097c2887 ad90521bad85 ad9bb0c5d192 ae12202bd2b4 ae9d091062c3 aead78d41e2b aeb1ae994b05 aeb307997f9f aec071ad5d97 aecc3b37452b af0cc92c1c16 af6786c8cd2b afe08c62aeaa afea176b60a5 b0b547b7ac11 b19f2364f219 b1a31b6ba069 b20683449899 b236381a17be b2a59e532589 b2de5bf5bb2d b2e19caaf26f b3b4a528a019 b3b4dab25327 b3e6a202089d b41f6b968104 b43c5d6e0eb9 b44de903bc7b b46175079217 b48221bd5e35 b5020a7faa31 b54c80b0a921 b5726e9a13e9 b582b3de182c b59a50096000 b5c48b8254e6 b5e83cc0a317 b5ffe5ebd786 b60f5c8816ff b6359ddd5474 b64f5c66ab5b b65025d4d71c b67cdaaf5da6 b6e9a82209ef b6fb269aba2c b7aeedc15982 b8350e3a0ff4 b8d15c857439 b8e8f6969b69 b8f850c522d7 b906f6e9e122 b9510c9d4032 b96b2e0f25a1 b99b02cb7876 b9aa157a5c28 b9bf5effa0bc ba66be89b149 ba673507eb99 ba81c97a5d0a bab803979eba bb073da7979e bb209f49c22d bb2266fde9ff bb29e1a2e499 bb526f9d97f4 bb730a593c2e bbb2cbf6bf18 bbcd8f177763 bc6a9936e450 bc7d6a9f35bc bc7ef396af34 bca87fa19575 bcd925f2451c bce18bc378b5 bd598ca72f43 bdcae37688d6 bdccf137f4de be361df2d237 be4397b5f9f1 be800d93ff79 be8576cfc7ad bee1965229fd bf23f380c019 bf6e07ee4608 bf87ddef9b54 bfa1431e35d4 bfb7d2b41727 bfde563f2df4 c0892a82147d c09a4a75675d c10fcf022a96 c12dc753a059 c14724f8af97 c194e8fcb414 c19b4da61b0e c1e4ef82c923 c27e6713541d c2fa320b527e c361c66d09bb c36b55052c0c c3ca34c2d2e5 c40d07a7e254 c4826f85335a c50010088bc5 c52483759825 c52db15596d5 c550a4df4751 c5621834477f c56e79cbb6a9 c5e5b20b2e15 c6333ca678cf c6714e58a376 c7c2e2e5b851 c846ab81284e c85b32ff0ea0 c86cff448a79 c8e5fcb51d9a c93a367d8b61 c965c3c5bc56 c97468592027 c9c76f6b8cbf ca3ed2981298 ca46a9852d9a ca633c9d923e caba9b7181fe caeb470c7b4b cb2633cad640 cb43230d2f03 cb6a315d1359 cba1060b5490 cbb5b1f52011 cbf24d82781d cbfce83c0d4a cc1b3c6ce894 cc1fcb10a59d cc62d0aa4f16 cc877022b8ec cc8d397a85ad cca0ab9e134d cccd7e78a377 cce761f22272 cd5d0d69d098 cd66d0ed1dc6 cdb9aae84067 cdc29a4df587 cdd1e4ff5850 cea063a3f639 ceaaa474b396 cecc1862fcfd cecc42e4a5a8 cf09de6485b7 cf1a38026f11 cf2f0a2ca0db d0712e5c29e3 d0aee20f9f16 d0b90d2ea589 d0dbb4393a02 d237df0f1673 d24e01860721 d2840e4568e7 d28ceaaccd35 d33e6ee4dd8f d3f70ab08a8b d44c46d5ecbd d45c9da5467d d488082cf751 d4c377a75744 d4cf43815138 d573795e6cad d59b84e95c78 d59f6091e96d d66563a074dc d6a028114449 d7853b4dd898 d8025cd4cfe2 d8761ca60920 d87af560d81a d888d832b1b5 d896527761d8 d9661cb8e3d6 d9cc8a65467b da23a81ece3c da4dfb87d5d7 da786bd062cf db26b44fd926 dbb64cd751c3 dbb82c7465f4 dbd7d7c2fd9c dbe9d7684c7b dbf01a1038f6 dc0af193f61c dc5c09b2798e dc84af9515d8 dcb2dac12fa3 dd35f6b0a9a8 dd8b0059c565 ddb106717dca de5115154e05 dea7345f98f6 dec374e53bef ded32a54a9b6 df02f4495a78 df1d6bffa0ee df925261ffc2 df9ae04ddbab e0c31f2ed4fe e0c827b0b9aa e0df0a07c50b e12d4cc84237 e14431c72939 e15c36764087 e40c29049121 e4dcbf20951c e5599fcbc888 e55e4f5caa1c e5c755526464 e5eddc038dd4 e6af1fd1998c e6c877d2ae25 e738fcea8a05 e7c01c8e3382 e851f004d7bf e88b161e0aa1 e89a47ee22fa e9153b0dcb5f e9394de05221 e946906378dc e97ed8836f58 e9bb3122a0b0 ea4f4679096b ea8521b697ee eaafa4695786 eac7d11e47ef eb0897ff63b7 eb128ba29442 eb29ba61ba09 ebad6a3e2b95 ebb944878b3b ebba9f2954a8 ebc4f1d75608 ec2554421279 ec351d10b595 ec50c6c380f4 ec5ba3fafe06 eca320c6ddbe ecc0c2aaf610 ecf3e4e042fb ed173d87cf27 edb0e0dcfc0c edb4d09eddde ee03fe0dcca2 ee61b00f1244 ee87bf88348d eec9f3824ec0 eee6750dfa61 eee9c1f4222b ef7e4793fc0a f0279a582893 f153726b5f0f f158892a8f01 f16cc7686c2e f17e17a317e8 f1a37c338e8f f232e277a558 f279a57f92a9 f2dfd9c704af f34a1f1f1abf f35bbe6a36c9 f368aadd41e0 f4d380732f5f f4d998f18027 f511ddd39ffd f52b69bbd37b f531bf515e4c f6701d521020 f73072810050 f749e14eaf36 f773629657a7 f773e6cfec5c f7b70545ad61 f7e9bd26aca0 f7f49530f2ab f7fd11fbe741 f8c3006313c2 f8fbacbccb70 f926d690b885 f9a72642b160 f9b61bc2330c f9c2a34df0f8 f9d6bc12e034 fa537c08d3b8 fad9a0b82a61 faf1a4d1d15b fba2ee34d2d8 fc5389c2e046 fc5bde7617d2 fca5f291b8f1 fcd6984032a8 fce053b43bd7 fd10201f874a fd4199a48fc0 fdde29fa0ee6 fe89c6ffb4a3 feac192d9dab feefc86ee1bf ff17113efdcc ff61a63fbc96 ff7eb712d4f5 ff86e8af08fb ffab948dced8 ffd10ec9e16b '
read_cnt_artic_list = read_cnt_artic_list.split(' ')[:-1]
print(len(read_cnt_artic_list))

total_cnt_list = '9 12 630 1 11 2 282 12 2160 2 1 3 518 5 4 43 1 290 14 10 107417 1679 2 1 2 11 133 23 1 666 334 4 1 14 241 6 9 14 131 18 635 177 1 200 1540 36 4857 5 15 27 3133 6686 19 1892 80350 1 4 1 13 165 305 5 388 63 1 1 1 13 47 15 3 1221 4 851 1 2 427 1557 4 722 1 33 2083 139 493 175 3 8 5 90 10 38 165 5972 1 2 51319 58 2 16179 78 87 5 10 230 5 2838 1116 1 3 14691 8 134 16069 5 873 1178 1 1 1 62 448 337 13 15 2 43 1 111 28 10 68 1402 3 1 587 13 3 10 1458 9528 2 413 1 403 37 1 1 1 5292 2609 6 2 113 2 1492 1 2 1 24 14 217 20974 1 83 2 6 1 437 3 5 711 37 1 230 174 1 110 2 1 14 20 51 1332 135 3040 4 4592 1442 30 116 8 62 11 157 160 17375 58 2 1 7 1 3254 2570 832 1 4816 1 38 578 416 4220 76 45 424 2 3442 7 122 372 28 40269 4170 217 2950 2295 1 713 1 16 7 14 1 23 1 4 1 6 2967 13304 1 6168 1709 5 1 222 12 262 88 479 63 15 1249 3 1 21 1 286 14 3 5 45 843 17 961 18 6 87 9 246 248 11 2 1 1 5 11 1628 1345 67 1 24 1 18007 45 8 24407 108 1 11 5 28 1756 7 2637 77 1 1 2 1 4 22 2 689 1944 2 1 117 123 1517 3 8 145 1 2 2 22549 1 1699 270 1121 1 4 2 31 404 279 598 19 2 9310 152 9 1871 5 183 1041 16 14 37 2 18250 275 70 3 1 1962 13 46 1 7 3 8 71 9748 386 1 203 4 6 1 4 17 6 37 3 316 1 28 2 1 868 1 5629 7 11 12487 1 383 1 1 21 20 4 17 12 1 4 30755 1 340 1 1 13 4110 1 2 1564 5 4 28 19 760 10 2 7 3 8 3 5 4304 4 79 129 39 76 444 3 5 1 1 16820 2 1 2261 60 2 1 1 4 16 1 3024 5 14 18 3276 1235 1 1 4 34 277 4 2 12 3678 4 185 4898 21984 11 69 476 950 1 1 23 1 4 1 537 1 1 258 265 4 340 62 33 9 1 19048 1532 103693 22969 14017 75 19 57 233 437 4 1 110 173 5 19 1 1 1 6999 2774 17 1 24 5 4 478 856 1 404 2 29 21 3 15 1094 148 1 74 17 1 3 351 6 1 21 424 953 1 3 27 2 16 4 1407 1 9098 5 69 6668 1 3 1430 350 5 8 24 97 16 14 2 2 24150 50741 33 15 2 21 36042 4 4 1 1263 9 1 705 2 4 233 23 1 33 968 3 331 6 16 9 1 1 25 7 3 31111 2 526 15447 252 11 8 137 1 5 83 2 6 1 1 398 6 452 2 2 1 39 9 15 172 1 1 5 1087 7492 18 300 486 16784 1 2 163 12 1 10 2 4 1 6787 3 7 824 5 2 13 2 5 2 97 1641 21 1198 21 531 1 2778 951 1 1 8 30621 58 1 2 13 2 852 19 16 1 2 633 1 11 746 730 115 4658 7 3 1 594 1 2 3534 3626 6 225 1 20923 4 2 32 2 2 1 97 5 1 185 14203 401 17 10 1 10679 3 94 1 9 7 27 25 5 1 188 3 389 28 5 2 163 4 793 9 1 24479 4848 22 3 557 1 1 8 8 1 1 65 23 3 21 2 10 45430 7 13 1 54 445 235 18 1 2 152 3 5 1309 9 11 50 2 56035 436 12 1 50952 350 1 7466 17 33 6 98 1 18517 25 7 5894 97 23 102 41 4510 5 49 104 6 1 1 38 9 160 21 108 2 1 20650 1 2 12 36 15 74 1 1 12 2 14629 2 101 1 2 2 195 227 28 1 13 14583 243024 142 1675 3 1972 1839 440 4 649 10 538 3 7 3 117 2608 1 199 1007 80 16 1 83 1 597 1 1 7 7 503 77 211 1469 4318 1 3 1 3 1 1 2 8 37323 3 13 1 6 3525 6001 1 482 34 1 1225 1 5 4207 5 245 1 1 3 4775 2 3 3 13 1 13 253 8 50 13 33 14 270 15 3 3039 2 6 2339 5545 187 1 272 128 7 45 4 228 243 3 47 727 7 5 1 1 2 4 208 40 12146 1 1 1 1 2 2 2 94 6 23 2 3 1 26 4762 51 1 1 2 3 1274 124 7 8388 108 18 2119 663 2 195 5 1 157 512 2 12 13 62489 1 2 34 94 543 1 1 17 1 2282 1178 505 1 2 12376 1 1256 6 8 29975 318 18945 4 4 7 1 31 9 7 3834 20 2 288 156 1 1 13284 2 2 53 219 3 3 57 27 2 949 7 1 10 57 1 4058 56 1 52 7 3 14923 1 1 37 3526 129 2 1 8 14 7 16 10575 87 1 6 23 11214 324 2 1695 4 147 48 34 61559 1 23 9 48 32 31 2 8 1650 8 1 1 4 1154 1 11826 11477 1 849 1137 1 10 366 190 1 10451 1784 1 1 599 37 3336 1 620 63 700 1 8 4443 1 306 1 110 1 40 82 1 1 1433 448 482 1169 12 1 2 1756 281 15 530 1 4 27 326 719 5 1 1127 358 18626 195 34 2265 1326 3286 1 1 789 11 2 1 13 6099 7 40 200 1 283 16 11305 1 51 1360 3 2 23 994 20785 1 41 8 1388 1 1 1629 1363 405 4744 466 4141 1 917 3810 96 11 322 11353 4 1001 1 4230 13 135 409 449 144 1 3248 464 5 6039 1 1 1 1 16 50 2 980 22732 6 5 25 458 1 9764 118 5685 30 108 9 39 2 3 16 338 1 19 10 8616 385 1 7 1 2 146 5 193 2 34721 6 2 7 1 10116 1144 6 174 1 6 70492 5691 4 1 3 883 209 888 1 6 1 1 3403 13 4 60 1 2807 73510 8673 29154 8 14 4930 255 6 5000 1 7 136 4 2 1 19 2 2 2509 2 17 588 25 1 1 417 2457 1 108 2 7647 24 1 50 1 2782 110 15 16 1 307 1 1 102 1 190 4793 58764 1 49 30 1 1 3 7 32712 114 15 175 1 15450 40 13 401 809 11 120 1 308 45 1 44 1 31 2 9 21 8 17 8 4 1 1 16122 4 3 1 274 55 325 613 4 9 934 10 1 48 37 1 24 2 4 6 92 4603 8 1 1400 484 141 3 16 103 4 7 7 1 1 9 655 82 5517 1 4 174 1 31 40 274 1 474 398 414 1 13 2608 27 2775 56080 18 6 3 1 5215 1 1 6530 1 13 25 5997 22 1003 926 1 1 47 15064 1 155 15681 10 18 1 1 19 700 1 111 7 109 715 56 499 384 1224 82 73 1 215 10 1 1 20 27 46 57 309 6 898 2669 1 24 2278 4 3 77239 1060 2 61 1810 3 95 1 822 4 19663 1 81 2 53 119 1184 41 43858 37 20 3 6565 5 1 7 1 37 164 7500 2 4 1209 3 6204 1023 2 2 2 1 72 133 2 8 16 1882 1 10 1 15 1 6494 1 6 13 3 158 3 2 6939 7 49646 1327 927 6103 36 1 12285 417 111 168 1 4 4 5 1 1 5 6 10 3 3 1934 1 57882 148 1 10 10 972 11253 15 10 1 6 35 19 20 193 35494 37047 1005 25 11 216 22 57 284 91 335 1185 26 5051 87 8 1 93 940 4 269 518 190 40 3 6 2 150 25 1 14 109 5 28 29592 35 1 1 1 16 9266 14 1505 1 101 4 1 11063 39 17 146 58087 5 11 115 14 16 31 1 1 4 669 4015 154 1 4 2 3 49 99 1 86 557 46 1 3 10 2 5444 1 56 5 34 1 1 17 1 4 93 6 3 134 12 65 5152 1 1 15 6 11 360 15 2 18 35 108 4 24 10 10 11 22 8 4283 1 33 1 69 2 67 22 4988 2 49 1 1 907 1 793 15 52 1 66 44727 1060 1 2 10 978 19 1 6769 198 787 4 19 8 1 6 1 644 3463 3 1 18 4 2 124 2 549 6 15 957 59 2 2 1 2 24 8 1 1 21 5 41 3 12139 42 7 1338 1 3112 6 1 28 14 46 2136 1 36 1 7 10 1 5238 1 3 1418 7 13 3346 52 43414 520 5 1 7085 3510 1 1 33 2 2764 1 1 15762 92 1 30 2 1 397 78 1 2 115 1 14294 64 1422 43 1 2933 26 9 16 1 225 52 1 1 2 1295 286584 1 1 1 6089 1440 10 2 1 403 4 1 1435 3 1740 301 8 180 6762 15257 3 2 3 10 1 16 174 2 1 2 3 72 2088 19 1807 2 1 1 2 1 6 2 4 66 3 1 295 1 485 4 16936 269 193 1 1 1 8 74 405 21 239 2319 1 1 2 2 7135 1 1262 315 306 23 5 1860 1 276 488 1 2 5 6 204 1 42 8 1 1 2233 3338 2 2414 1 1 4 15 5 13 22 2513 11 106 1 3 2 159 274 1 3 131 4 256 3385 3 1402 3 1178 2 2 7 1 1 12 1631 1 20660 207 1 2 102 418 1788 5 1 79 1 1 '
total_cnt_list = total_cnt_list.split(' ')[:-1]
total_cnt_list = [int(x) for x in total_cnt_list]
print(len(total_cnt_list))

total_cnt_artic_list = '004c7fdc884b 004d9e06c081 006243b07ca1 00695b1e08b2 006d8b978170 008218eb7ef7 008755151439 00966b684191 00d31669d80c 00ffa5144164 0111cf9d670c 012205262331 0122341c3fd3 0125a1aeb024 0133accd9737 0193f867f995 019c6009a33a 01cebe065fa3 01dae4462058 01dc0d2072af 01e234fed982 021c7a9a7bce 0230efb1a2f1 025283ad5f4f 026745016470 02f51db88465 0343bbb9f9e2 03482ad2db10 03c5eb032321 03df1b93784b 040df7d04d83 042811b90b22 0439b92d82cd 0455735527b9 048c92d99066 048eed89a5b5 0492e64cdba1 04f2b3378305 04f32f66ed37 053339eb0c7e 057fa8d9c5a3 05d2a03b6fc4 05ed24750473 05f6e1ae6c4a 060f32817dc1 06129065820a 06163a992c49 062ec9fc58c0 06399f1590c5 063a8d4b0e7b 06425238a5e2 06516f9f1d2d 067789ab0c86 06a6828d8873 06b1bafdc206 06b54cfff9fb 071a09961c74 0736468d6772 073716244dc5 0760f3ad046a 0761b79d3a7e 07aeb0c65a85 07d3ab4cc962 07d80043bb0f 07e953c56b9f 081814e3d0a9 081853c5971d 084213b8e605 084443e2dada 084b1015f476 085818d6d422 086bcc4c803d 08859af78c11 08a2af512c10 08b33fa9f0f7 08f305897306 09a718882306 09a71c94831d 0a1d6a744acf 0a5c515306b9 0a901c5e41fe 0a9a9bc2f309 0ac5cb215acd 0acf315dbd95 0b14ba8b524f 0b3dcf6fe3c0 0b71c253dcc7 0bec4f5feec4 0bf332ee3240 0c1802e5e937 0c26acbab1a6 0c351c8751b8 0c35696f126f 0c4d0ed64adc 0c82686a63fc 0c925fd3d498 0caeac13b80f 0cb6ec7e6f2f 0cbe660e0fc0 0ce15d61f967 0d0929eda958 0d20a6b11ecd 0d64cbec23fc 0d9c863fc858 0dae492eac17 0dae9229e98f 0dc85c4c443e 0df49fd3dcf1 0dfeba02bbdf 0e08828556bb 0e3798b2f06b 0e5a46f4e956 0e7237cfea74 0e74c0267efe 0e7adc775497 0e844f4b0260 0e9b690eaaad 0efc307acb4d 0f007de8e89e 0f33ab5402e5 0f3877f33e15 0f79ca3b764f 0f8fe6b57e23 0fb493abc3b9 0fb67d5c3a4d 104b4a188dbb 1050c3c30f74 106233070f41 1063977dfe5d 106d9b22a875 107049b54182 108794ea6c71 10bb1e1bde7c 10cfbb00a124 10ef598d0090 10f05eea8c30 10ff111ec9ab 112cba3281e3 11533be18c1c 1184176f0013 1200ccaaa954 12312eaaed2a 125453c9b779 12678ba7324c 128c67a8a0e3 129456bb1483 12a6bad21d70 1332530faf38 13444c7280a9 135b2c0af605 135d237dcdc7 13bf8217be5d 140770437998 1456854ac0cb 1482e597605b 14888f314294 14a7cb6072af 15046be388cc 151b259a893f 153385e1895d 15aaf1e172e8 15e571eff70e 15f3566d639a 15fd2e01a8c8 1617afc5251d 16321f83a546 16514d8cd9a3 1662fde8a0eb 167f1200b7ea 168907e66495 16a5b19ca36e 16cf77abadfa 16df45f4f4da 1702f6f1f27d 172100d1cd98 1724777e6816 17394c3aa9d0 1749329b457d 176303bdf38c 17692bd451a9 179752352d2e 17b2969dd68c 17c92caaea73 17de6b5cb2e4 17e8499a0201 1817dec6ed5d 189541ac4f39 18d84009afda 18f078d34154 18f404f522e6 191b99169127 1923e77b9ef3 1953effdd87c 19d4547214aa 19d87bb869d5 19da7f25aaf9 1a87662bf8a5 1abae56ccd01 1ac483af3bbc 1ac56befdf5c 1b363ddd8790 1b5445639ef7 1b781f98d007 1b8043d3cfca 1bb9af645346 1bdb067e5b7e 1be38e6b0cb0 1beb98cd1fe0 1bfa8ac692a6 1bfae940e040 1c06c901e7e9 1c2ba8adc698 1c6c038e5502 1c6cd986daf5 1cfd62a4588a 1d179955d782 1d202f43cb05 1d38ba9cb358 1d3cf6f60706 1d64280bbda8 1d6dd443698f 1d9fcffd2aee 1ddf4410af6d 1df576ea17a4 1dffee8e7adc 1e26fb94d125 1e3dc8888bad 1e950292d51c 1ea60c7e9505 1f07e64464cf 1f19c7db751a 1f454950047b 1f4ff356795f 1f8dd80f3bb0 200c767d2c6d 20588565e116 20afc66c7425 2108819fd2b7 211c50b68c51 212095594257 215068ba4144 219bd5492d88 220aa4537563 220ba7b5d227 224b76bd6d3c 224cedc0c0c9 2255702002a8 22ad7d8418b9 23050595ffb6 231c33c6dff2 23495ffe85c5 2373068f42fe 23a1c88b5f99 23bcfb126d07 23d86ebb294a 23dee2b55f12 23e02301512c 23ed7f849a13 23f8a7f16bab 2458dc4a33fb 2481a45ab002 24970502777a 24d1d464115d 251c4eb11007 2528d973d976 2577b558a47b 259359db6c76 25a9477f3c74 25b0c9953a5a 25bc213ce798 25ee8afe652e 264548a0cd9c 267a024c586d 2681de8dfffc 268655470bfa 268a017c6040 2709d610aeb3 273734d766c2 278e94c9b7be 279a41002361 27c66f0afc0c 27d6ef114822 27d92d306a3e 2801b54b20d7 283663666a0f 285689b36cb1 28717c591598 2876ea06913a 28891f59a58d 28ac9a0aa309 28aeeb02e784 28d8936ada53 29143a9b1dd2 29441c6183f7 29c81dc013f8 2a159ca04189 2a20057148a1 2a90133c66b3 2ad27b3c1145 2aef953eea89 2aeff4c7cd54 2afb7e2d44fd 2b0bb46e7b61 2b1c4af99f9c 2b1ecd1d3823 2b205156aacf 2b3be0234f9e 2b9de663f4f3 2bbba56773c4 2bd69ba7969a 2bfa4f126f56 2c0caa78a63e 2c0ddb1afcaf 2c358254b557 2c4038fedccf 2c4b79bb5ffb 2c54f7d416ba 2cd7b23da0ea 2cda4aeef377 2ce597f5d008 2d0d3d0bd826 2d448594553d 2d74e3932b36 2d7cf162cd23 2d83bc00502d 2d9143a2c048 2dce71a5e251 2e0bc87f29ac 2e1e8957f108 2e327275933f 2e487d73c82f 2e6c29a3ee93 2e78619f712d 2e7d254f45ec 2eb1bd280215 2ee85d4874a9 2f0ec6618455 2f132a85a7d2 2f1fe4b71759 2f2d584a67c2 2f406ce216e8 2f6139c6b61e 2f8e9f3112ac 2fb4cdb1fe4c 2fbaf42b8363 2fd1a77c3103 300b4e376c54 30178f800833 3026426ea1cc 302a23f0d7ba 303d9dd9d1ac 307cee5c2b3d 30898865b0c1 308b444b2a1b 308c474e5f2c 309d2aa34f18 30a356368837 30b7d757c858 30d07f5c16dd 30d4121bb97c 30dce553d388 30f1837c2432 312b6b7a6760 3151ce609206 316568bbffe2 31cd95b7f50c 32372da84af7 32584e97e6f2 329000893980 32cd3c7dbf0b 32de80fee26a 333a595b31f8 335f28ef6222 3385da5e04e2 338dd7c5f076 33cdce29aeca 33d56bfae208 33f081b73f64 3430ff15798e 34351c44c014 34432b6f7fce 345260232086 347281450e2f 347d29f0e0ca 34a290ae00fb 34abb3650f7e 3500459dc67c 35010455c400 358557698b7c 35ac3949399c 35eae24dd04b 35f8ca4fc73c 35fbda96100c 360bb2889a65 3665ca67d16d 369d8c66cdfa 36a938477642 36d9adb79d3b 36e0c3e2d730 3717b603c4cf 373b70eafe74 379a166d1273 37a2d827e370 37a7ae6bf780 37af6c97924c 37b453134c85 37ec614e6b82 38319364dac1 384c8419d5cd 385dc80a01f9 38828a108ee4 38849f1fccb2 3884b0c87546 38cde55a931c 38d36014d8bd 38e53b9aacdb 38f41bb456e6 3929d70f4e50 393641d80310 393f7ab284db 3978534603cb 397ac7fbccb3 397e3f869c89 3980244839ba 39c0d9cc071b 39c3092e1c5b 3a0fd36b2f37 3a3f5b5d4a92 3a745ad2ab8f 3a80402936a3 3a842c52f4cb 3accdc497386 3b006fc4fe6c 3b38e602afc7 3b398d359802 3b5d1ba522bb 3b91909a89a5 3b9a91c7168c 3be227b77dec 3bec231517b1 3c3c3dfa9b56 3c3f6b99fda3 3c4b7980fd2b 3c5dc4138052 3c6bd0a11c1a 3c9091ecefcb 3cf359f05649 3cfce7d8f049 3d10c6864aa5 3d25b9caa11b 3d55221e6dc2 3d5cf7d1c8e7 3d6e6fcb4149 3da5f1fd352c 3dd7f7b7a2ac 3e00416b5245 3e060140c202 3e1a38cebb27 3e74994f04bf 3e856a42d196 3ead3308df52 3ed0728317a3 3f1e4dd10a6b 3f4b7139604a 3f75b9524cd6 3f7b55d0957a 3f800cf2cf2d 3f85bf30834d 3fdced1a29d9 404d8787e99c 4084e47872bb 408653ce1751 4127e0857764 413275053602 4144d5df324d 414fe97ba590 4182eabd0476 41934aa0d407 4197e292ebd0 41bca6a8ab9a 41dde0d1afc3 41e946fbd803 42485634541e 425559847fb6 4262c8e91e72 42664b3fcc0a 427b5e5be02e 42aafc997bb1 42bf1b98df64 42dc61265af2 43001fe85e94 4309a7e0dfdd 432c68ed2dac 4331c1eedfd6 4364abac22bf 43838d1754dc 43bc517f1c64 43c0f20b765b 440d24b37554 448f27be7ec0 44de26d18737 44e264f7f916 452d9806902e 457b54c2a26d 45a408e7a32e 45c302256b59 45c96f112621 45e19ca03a21 45e1c5e65c4b 46124a4353a7 46213cbac7fd 46431d340c91 46467fac3e0c 468713e52321 46929d0b540f 46ab1e3eb51f 46cf47d44b2a 46db204cfe92 46e6174a4546 471c5419e4e8 473b8aff6d9f 475a558cc5fb 47a06c71f160 47a1ef1051e3 47ba0873c736 4802b707e9c4 483a99c0d4b1 48596d27d871 487449891028 4875878e75be 489456a45e15 489facee3880 48be3ffe2f10 48c242981344 4918b9e5fcaf 494ac949f678 495bd4dd7e21 4970668624f3 4990be2f85be 49ac69579451 49c48cad3815 49d064f921cd 49db5cf3d2b0 4a0b947c7659 4a6620e1c32c 4a822d4b6eb6 4a9d42b3358e 4ac623c51141 4ac6e80de5b0 4ad50b1b0dae 4add8bf37f0a 4b0b00575349 4b190d705216 4b32f5ece6a7 4b418aa37766 4b5b58622bd8 4b6612ffb181 4b6e0d22163d 4b79f20f949f 4b7a6940d03f 4bbc235c85f0 4c0053a76909 4c063c958ef1 4c5106470dc1 4c5d7b2d3d56 4c68ab01e20a 4c6908d7a811 4c6ed58bfbfb 4c9363d6b40a 4ccfdbd777dd 4cdbb6417199 4ce3c9bd5d31 4ceb28cd9a04 4d1316071dac 4d2c0f86fffe 4d45bdaeaba8 4d5cef99da30 4d5e25f18c6f 4d7eb479defa 4dad809728aa 4db0355d22c0 4ded935761ab 4e0830a17ffe 4e108702d350 4e2d73602e48 4e3846a19849 4e7ca4f2ede5 4eace834ef2e 4eb21033132a 4efef1a99b44 4f2e4a92074b 4fb5a9faf621 4fb96586805d 4fbfc0d44d11 4fc6945836eb 500921e198e7 501e3b1454ad 506c68c20ddf 5074d93f0851 50861ec95c57 50956ec10f65 50bbf809e8ec 50cfe68d55f9 510f411fdfa4 51b3d6885a43 51cff054a8a4 51d345549c29 52020d1b9eff 521d29334e1f 527690bd5a2b 52be379b2fb6 52c77aa0fb00 52d2e73d761b 52f5c3ef71f2 52fe19a4b5ca 531078487844 5350b52e6c1c 538604367930 539e3815b099 53dab56a7396 541cfdc361b3 5434de80e9f4 545fb5448c16 54664fb02583 54778da1396b 54d021295974 550b064bf80f 5547e33aa0cb 5551dd2eedb8 555904c20672 556b3a3bea8a 55c7d7620686 55d40d55e675 55f28f9922b3 5616fefdf98f 562104faadf4 562cc6e961d0 563eda71515e 564cdb0fe58f 565e8b195877 567921d2e080 5698ebd490d3 569b4fb1dbad 56a9b6c1392c 56dfe94e4ee0 5707a22bf5fa 570a4863ff5c 572309f50639 57498e48e94a 57a55c3892c7 57a76f4f42ea 57cff4edcb74 58419301bd81 587ed84258f8 5887a9b474d8 5945b35613d0 59c2306b04db 59e8fc918d0e 59f43d5b3683 5a4ec7c4f546 5aa3ac8c2180 5ab3e6bce7a0 5ac01faef176 5ace478293b5 5aff94ad02a4 5b0e4e70d9cf 5b39143dc56e 5b6d1e9b38ce 5b6da109c2cf 5b73f5efb3ec 5b8ee487c88d 5bdd75a75472 5c4277b017d8 5ca75a5f6731 5cf0b4976ffd 5cf110543cfb 5d02c1b2f519 5d2b414c7d58 5d4270c02a16 5d53162c85a5 5d6644e7abda 5d75586ff07f 5d8d55c4aa14 5d9878339d56 5d9c4de67b15 5dc08dca028c 5dc718d57413 5df15120005d 5e024c486a15 5e02ce7fc5da 5e31c6347625 5e94946cc58b 5e9c38cee0e1 5ea350fb118a 5eac623d925c 5eb1604a611d 5eb7e487edeb 5ef506c546dc 5f21b9a2a94d 5f28cad73eb8 5f5428e82526 5f59b5cbfb3d 5f62d98e372f 5fd7543690dd 600edd6c7459 6075f6c32dde 60786ea2b79c 60a3aec22f15 6119e80a9d76 61567359306d 619d03aae8bd 61a991089571 61ce1f630ec7 61f578c0e2ec 626dd10cfb65 62cfb4e55eb1 62d421951db4 62df4af473e6 62fd457dd801 631d3d6eeb9a 633d52713392 635486478b71 6360b84a1580 63845948aac4 63a435ed28b1 63a97f67683e 63e25a734268 642bee4ce3ec 643380adecf2 645f4befa808 64b33f20732e 64cf030c92ae 64e4a3fd4a1e 64f606bb9359 652215345835 6530e59f8d71 655e5b424b5a 65bd390c6f35 65c15a8ed7d0 66205987195e 662582977dd8 66542bdce394 6656228c9c9f 666439a883f5 6665e0b5d77d 666bb50bb190 668b743836ab 66b0ba37e2ba 66c56d29e646 66c5950afa12 66f27fef108a 67478fa396ce 677c410c3689 678ad28a945a 679329164024 67a434e5ce1e 67b9d2424ab7 68040e12bfa5 683c6601126b 685e431ad36b 68947a0a5e9d 68feeb078d84 69123a97dbe9 691317d1205f 691b2b6e2f0d 6975bffc7c8c 698b8aa17fa2 69b9978bd854 69e46c422027 69f79167d855 6a14ce185a3a 6a24a7ac9174 6a2ea703c00a 6a30fa8520d9 6a393f1da78b 6a5400c3f3a3 6a7ad2dbca7d 6a813d0ac4b8 6a8b1dcd3396 6a8f18fd2194 6a9a460c5dc2 6ac232f02246 6b0bea6613aa 6b2fabfba8d5 6b44b570aaa7 6b588fcdfb07 6b747682b0a1 6b9ab6e9f5a4 6b9fa8860f97 6bb72963da0f 6bc58088175c 6bcebba9f3fc 6befe432accd 6c2e79e49504 6c52779f7290 6c53dda2d833 6c576c55a2e8 6cf3e3170774 6d10bdb0442c 6d42b1067dc9 6d86e5e59c49 6db22793453e 6dbc3e715193 6dd5f60bbc51 6e4020c1b55a 6e88169ee3fd 6ea95c36bff5 6eca9900ec18 6ecff472debd 6ed185d62dfe 6effa6f5ca51 6f0a91ff6ebf 6f7caa40535e 6fb9174e3ddd 6ff5ef30f627 6ff7d81eb9d7 70003b07f2fb 7011bfe7cb22 702e5cf193eb 703267c40022 7049337211ac 706d38b91d0a 70aa1680bec8 70aa42a6afb2 70e1cedde82f 711d8e38076b 711f45750d01 71307c33469a 713a10dcfe3b 713fdf8e8b7c 7161935cffaa 717ef5b8a3b4 718b277d3f96 719978f87d81 7199e36714d2 71a7c5394969 722cb7a86ddf 72458cd8a16a 72518984e7e2 7270c96a09d3 72a75940aa8e 72c6a88c3552 72e2bc027209 72e36fef91e0 7324b1437a5a 732f183faa5c 73962f0bf6b5 739f709ec856 73c5d9a50228 74a9ec7c0af7 74b1d9b16d0a 74d2d22dee10 7510d62fc747 75153977c0e7 7548badf1a14 757518f4a3da 75bfe29330f3 760f22e7eeea 761d2ff279b9 764bfc237630 765369e4787a 7655305189aa 7667261af473 766a11434df3 76750f10b4dd 76aa846fdc3b 771d245e4c42 7737cda930a3 77478db7d9ce 775c65f8f834 77661d8ee280 777c825c2707 7797fb994743 77a4191c2ca9 77ab99122600 77aca1865e15 77cd046f21dc 77e5b6e039c2 77f58fff71bd 7815439e5d66 7822ac70113e 782cf9107650 78778bae32f4 788fa7d2c5ae 78b1d0b048c0 78be960eb7d6 78c5c3124eb2 78c9d94899e7 78f6e82db94e 78f840f0f6ae 791be2881d19 7932a15f585a 794f17dffdc5 795b04ffc210 795f565dee29 79631268a0e9 798cb35dbd4e 79f2a940b6d4 79f4f8d30b27 7a1f8abb34ac 7a47e6459638 7a603b0e8b55 7a6ba503c717 7a755a53b862 7acba2056f1e 7ad9ed89d557 7afdf7a238c2 7b0eb1a7696c 7b0f501aa3f0 7b0fc1c3bbb2 7b190a9cca24 7b204111ade7 7b26a520b32e 7b626c626fd6 7b9afb4669f4 7bb444889f77 7be583790762 7c0b90fcb4fc 7c21a21aa452 7c231c87aaa3 7c2f1df218d4 7cb02736d2ba 7cb6417e6eb4 7cdbfed4fcf6 7ce353094cce 7ce3a5273cd2 7cf2cd421cdc 7d16ab23ea03 7d31dd8fe8f0 7d3c888019f6 7d3d6ab7740d 7d4a5a52b8d6 7d50b8a7f80c 7d78d3500cd9 7d813f74f979 7d86c289dda9 7daec9f2b31a 7dcc59375510 7dcd4b4470a1 7df420ebe6e6 7dfad497f5b7 7e2ac44e35dd 7e3829ad431f 7e4e13dd68ff 7e5b723fe3c9 7f408d817a28 7f5f7ccadf30 7f666565c8f8 7f6f0e89d6c4 7f816b069d3f 7f89891db083 7fc6f6fa444c 7fe3ec6aeaca 7fe9cf1f4a86 800f69e86502 80774a8069f1 809bc2a12dda 80ad213fed16 80d91011d51b 80dedbebee93 80f1d8c0296c 810dff385538 81677b23a8bf 816ae4f963fb 81d13f7a3cdd 81f9cf38b7f4 824116d0882a 826b3a5e4507 827a95809546 82b03d45edf0 82f2ca897bc0 83228f1d6f3a 8333de998205 833ad8725ddf 83b820e42af4 83c1925b5769 83c26d093f61 83d81fd39e33 845da3de1f46 84b03d7ad0eb 84c9fd0c7deb 84ebbd922e63 85270a430a54 8557f028be5e 857ae348642b 85c4cc0190b0 85e9113b474f 861462181b3e 863e495a265d 86540ab89c3c 865f182e02e4 86799769d762 869bfe7c03e7 870b53a4518a 8768beaa0726 876dc840e0e3 87734719d6b3 87841e4e99e0 87880fee3c0e 878afdca49ce 879b4cf084c8 882ea59ffe71 883c3076b36b 8890cb1dfefa 8895fcfa5dca 88fc2fbea807 89004728fa0c 891f73615b03 8963c4dcb2a8 897ef0061c38 89a1af8825d3 89c9f419ad9c '
total_cnt_artic_list += '89da7bb54e02 89f3c7181b46 8a04f0292390 8a31a84de551 8a37033e9778 8a693d47090d 8a897c021838 8a990023c16a 8a9c0fdf81d2 8ac4652d7b8f 8ad228511267 8afa7e657b10 8b0ff466ddf4 8b176af4f9fd 8b1d1e631a78 8b23b9710273 8b253522d503 8b3d4cf5866a 8b545e858bed 8b807bb19943 8bab63948c94 8bdb78f20404 8be601a92ce1 8bef06ec8842 8bf99ac05485 8c08b7e6ec64 8c0d61d2e071 8c10339246ca 8c4f48a292a0 8c63cc7588c9 8c8e70743d6e 8cb3bfd3e0fa 8cb7760e77fa 8cbec27ee6bd 8cc09f8f43ca 8cc3f1a70740 8ce9325487b0 8cea4741259d 8cebb42ffb63 8d3ac9743280 8d8249369c3c 8dd38ab076e5 8de46a55b8fe 8de93f09ff52 8e2352b92634 8e303ca3fb43 8e437a20d995 8e813a9da765 8e9fdc2e166f 8ea1b39d3319 8eac37553238 8ed00aeed4cd 8edcecc47f3d 8eec27beed34 8efd30d8a727 8f04d0cf799c 8f0cf59eceee 8f0dddae19c6 8f154304fda4 8f1b31699c42 8f8e339e9ab9 8fb1d4b8a472 8fc9dbf4dc28 8fd83920de7d 8fe227977fd0 8fe3b0e305c5 90382f38806e 90a3ba5e4beb 90b6252ef8af 90d6f8fabe1c 91250a57f535 91372e8363a2 91483dd37281 9150a4f0ce6b 9160e51aaa9d 916b246e617a 91a97896af8e 91b5fcf8ed81 921c537e5d77 92368c11e130 9245d4db3410 9271c65ba187 92aa12f62d7a 9343bd33d502 939c24c1c092 93a3786c8f6e 93bf5ed88ff7 93d459fcf0d6 9405e73446d8 940b2f4776c3 94215ef31eca 94255b780940 9444cc599fda 9456231547e1 945780210a9f 948fc419333f 94a4bc8566bc 94bc04847bd7 94c18dc470e0 94c7cc0f60f2 94c7d40c9b72 94dab122b11f 94dccb5d36da 94fc44f9d376 958a2f67dece 9597737ce7ca 95bea50ec28f 95e533656940 95e5558455cf 95fb849ed9b6 960edb30f0e0 96604982e26c 966cd35129c2 96e8fb7c9d84 96ff765eee48 971750c1ca6b 972e4e986548 973bfa361f12 974f572a7bec 976cff979cb5 976ee5388184 978f08f206e5 97b996bee383 97dee3e21af1 981eee0a340c 986734f88e74 98770a997297 987842024dd4 98cf6695af2a 990702d18637 99331857f173 9936550aa654 99b10e9580c6 99b33f9de7f1 99ece8601974 9a0ba678dd77 9a1244d0da42 9a496af61128 9a8a742ae19e 9a8b3b8b2f1a 9ac1d03ee1b4 9acaff6c4815 9aea4a4fcb41 9beb1df8ca0d 9bf40df0ad63 9c133637d90a 9cb1c47898cf 9d03fa9ae799 9d245a6207a4 9d2e99a03e51 9d82cfcd451f 9d8ef57b6fe7 9d974a537f7a 9dac221f983c 9dc17bb9f18f 9dc8b827fc54 9ddb46604b22 9de5e64e7c39 9e15ed7778fa 9e22a83b8f68 9e6b0a86a1c2 9e730b5473dc 9e8a9c468779 9e98af9660bc 9ec5dac228b1 9f324f916583 9f5b1346a2a2 9f8bce53b064 9f93f3d47f90 9fb42bb114c6 9fb688dcdd7d 9fe54018590c a0342047a43f a0484d95690a a059514cba70 a05994e844b9 a0655214ba22 a066619c91e3 a0890365c35d a0b3440619d4 a10fe0a49f54 a1346fa61a57 a14ad14a63bb a14c086dc0e6 a15f6fb719cc a1ae7cd8cd22 a1b77e768e49 a1c0e8271b5d a1e278becd90 a1f884c66e21 a2a662598b7c a2cd257f0c7a a2e16a6693aa a31ff2b18124 a357b32f946b a3754c322baa a3a2ae5098be a3a70d265197 a3b94960df5d a3d13f08c16f a3e01c73e3c8 a4094dbdd389 a40bd165f030 a44ebf224a35 a46306110292 a501cfa68efd a50c3039c97c a5631f055728 a57552e6508b a5b8262d20d5 a5d21b02a3ce a5e218237de4 a60b8207c44e a65f1a5f5022 a68db13a7112 a6956ca895bb a6b0a38a9c14 a6bc65b58fbf a6e3bc5696e7 a6ecb9c087cc a6f6ce07b577 a785ad42d358 a795266d05f6 a7a755d0a58d a7ae2486cbbd a7d32cc8637a a7efa0ed3158 a801826e21c5 a81032ebb75c a87214ee0c9e a8979e888ff9 a8a351d97392 a8dba6dfdeac a8f5574cd7c1 a9074d5151e4 a9b10f832328 a9b71e96bf0e aa1726cef350 aa2d4a616576 aa31b56ecae8 aa412196258a aa6177b7f58b aa6215c3ca4c aa6abe62774c aa8ae3d13c59 aaa28a3b57e8 aabbd0624591 aae5a31514fe ab2c1b215b4c ab54f9d231c8 ab5d8ab1bb92 ab813b4caaab abd38b4bd43a abff6a98b7c6 ac0fc14dfe14 ac1ff3dd003c ac34843ffe0e ac83e8b41a4d ac8a4ede064e acb153845a8c acbb097c2887 acc2492834b3 acc74bfaa379 acd5b2e24128 ad75b733f689 ad90521bad85 ad9bb0c5d192 adc418c4dcb6 ae12202bd2b4 ae475e06fe5c ae9d091062c3 aead78d41e2b aeb1ae994b05 aeb307997f9f aec071ad5d97 aecc395db6c4 aecc3b37452b aed36ca0dec1 af0cc92c1c16 af3700430574 af4b0cda9d4f af5ad898c07e af6438198d95 af6786c8cd2b af74bf0250b1 af771e7f701c af823d3a7931 afe08c62aeaa afea176b60a5 b026f556572e b03711212fdf b069e06aab83 b07f23c57394 b0b547b7ac11 b0d0269f7ce7 b0f8b8a86def b0f9d6939972 b19f2364f219 b1a31b6ba069 b20683449899 b236381a17be b2461995ce31 b28d3e2586d8 b2a59e532589 b2ca096e1f5b b2dde4065c8f b2de5bf5bb2d b2e19caaf26f b320aa9269cc b328ce865850 b3379ae9f03b b36fd411aa0f b39f8bd147fc b3b4a528a019 b3b4dab25327 b3d3da12d584 b3d58f582cf9 b3e6a202089d b41f6b968104 b43c5d6e0eb9 b44d726ae7fa b44de903bc7b b46175079217 b469d222d18c b48221bd5e35 b5020a7faa31 b523ade21945 b543d0952934 b54c80b0a921 b5726e9a13e9 b582b3de182c b59a50096000 b5a9013ec674 b5b92b6dac6c b5c48b8254e6 b5d9c8b426e7 b5e83cc0a317 b5ffe5ebd786 b60f5c8816ff b61a22b52bf6 b6359ddd5474 b64f5c66ab5b b65025d4d71c b650ceed92ce b6626c3b50d4 b67cdaaf5da6 b6bec6e7bdfb b6e9a82209ef b6fb269aba2c b7321adc620f b7406039a9c5 b743ad350b94 b759064089e6 b7aeedc15982 b7f14dcc7398 b7f2c11c9a9f b8350e3a0ff4 b8408de832d3 b8b384052cbe b8d15c857439 b8e8f6969b69 b8ef895ee20a b8f850c522d7 b906f6e9e122 b94430c4078f b95077e9652d b9510c9d4032 b96b2e0f25a1 b97724bcfb83 b99b02cb7876 b9aa157a5c28 b9b509fac7b0 b9bf5effa0bc b9c31febf91b b9e366264f68 ba53a7179847 ba66be89b149 ba673507eb99 ba81c97a5d0a baab2fac0204 bab803979eba bb073da7979e bb209f49c22d bb2266fde9ff bb29e1a2e499 bb526f9d97f4 bb730a593c2e bbb2cbf6bf18 bbc834c94084 bbcd8f177763 bbe3193cb857 bbf70b253df0 bc59e3f2d853 bc6a9936e450 bc7d62452143 bc7d6a9f35bc bc7ef396af34 bca87fa19575 bcaf91a21220 bcd925f2451c bce18bc378b5 bd292638d5b6 bd48359da3af bd598ca72f43 bd71e8f4ac3a bd9bb5f0f633 bdcae37688d6 bdccf137f4de be30901524a0 be361df2d237 be4397b5f9f1 be6e06895108 be800d93ff79 be829dd8ddc0 be8576cfc7ad bee123ee54a9 bee1965229fd bee91800e721 bf23f380c019 bf306d314e1a bf6e07ee4608 bf87ddef9b54 bfa1431e35d4 bfb7d2b41727 bfde563f2df4 c011bd4e19fd c033651aad20 c0892a82147d c09a4a75675d c0a69e75777e c0ba25cb838e c0d307a0e878 c0ffa6df4d47 c10fcf022a96 c12dc753a059 c14724f8af97 c15230b477e7 c16faaf7edbc c194e8fcb414 c1976032107d c19b4da61b0e c1e4ef82c923 c20280fe3da5 c20be344836c c24aee101207 c2529f8bad1f c27e6713541d c2fa320b527e c31a0d059c7e c33585a2167a c361c66d09bb c36b55052c0c c37bffc9e05d c3a5a23a5120 c3c84f0718cf c3ca34c2d2e5 c3ff876c48f8 c40d07a7e254 c4206d5dd042 c4420b2504fe c4578380ef3d c462535bceec c4826f85335a c49658b86324 c49f0c9438ab c50010088bc5 c5063bc7485c c52483759825 c52db15596d5 c550a4df4751 c5621834477f c56e79cbb6a9 c5b75e70edf9 c5e5b20b2e15 c6333ca678cf c648c4d19e59 c6714e58a376 c6a8d1f089fa c6b5d7f6b3b1 c6be65282e3b c6d09fe7122a c7162e6999f7 c76d5487e5fe c7738a5fd583 c782f501c7e7 c7c2e2e5b851 c7d6e04201f9 c8058be7d2d6 c846ab81284e c853a569833e c85b32ff0ea0 c86cff448a79 c8917092d6dd c8e5fcb51d9a c93a367d8b61 c965c3c5bc56 c97468592027 c9a8b45e11c0 c9b420da564a c9be9e3f94c9 c9c76f6b8cbf ca3ed2981298 ca46a9852d9a ca633c9d923e caba9b7181fe caeb470c7b4b cb2633cad640 cb43230d2f03 cb6a315d1359 cba1060b5490 cbb5b1f52011 cbc7d2680dbf cbf24d82781d cbfce83c0d4a cc1b3c6ce894 cc1fcb10a59d cc62d0aa4f16 cc877022b8ec cc8d397a85ad cc96d794d74d cca0ab9e134d ccac43090af6 cccd7e78a377 cce761f22272 ccfc8c2ac668 cd5d0d69d098 cd66d0ed1dc6 cdb9aae84067 cdc29a4df587 cdd1e4ff5850 cdf8dec5bc66 ce72d8d69003 cea063a3f639 ceaaa474b396 cebedaa2dd8a cecc1862fcfd cecc42e4a5a8 cefe5a1463b2 cf09de6485b7 cf1a38026f11 cf2f0a2ca0db cf8c4c21fac0 cfafd3c987d5 d01bc626ab0d d05d1e283f4a d0712e5c29e3 d0aee20f9f16 d0b90d2ea589 d0c1c7628226 d0dbb4393a02 d0ff3cf8788d d192b10934de d237df0f1673 d24e01860721 d2587fcf4aaf d2840e4568e7 d28ceaaccd35 d2a9c40713cc d336ed237768 d33e6ee4dd8f d344600b4a78 d3e544105c1a d3f70ab08a8b d403105269a1 d406d5c5ac2d d42bc0562d69 d44c46d5ecbd d45c9da5467d d488082cf751 d4a49db693c9 d4b2295dd26a d4b4bcd2c0b9 d4c33f7df86d d4c377a75744 d4cf43815138 d4ea034a0aea d573795e6cad d59b84e95c78 d59f6091e96d d5bdd443236c d629d53c6c9d d6318c75d85c d63b71b3ea5b d66563a074dc d66c7093fd54 d6a028114449 d701f925af7b d71a0a5b742e d7358db4f905 d7366daa3485 d7853b4dd898 d7af62973bfd d7e806995f9c d8025cd4cfe2 d83e6fa772a4 d85ec52108f2 d8761ca60920 d87af560d81a d888d832b1b5 d896527761d8 d8d432069c65 d91cb94c284d d9661cb8e3d6 d98483733ad8 d9afb2975b5c d9cc8a65467b d9e2781e6770 d9e7dfc354eb da23a81ece3c da4dfb87d5d7 da786bd062cf da87ea39f000 daa43e17ee7b dae8c89aa3cf db1194905bc2 db26b44fd926 db4dbfa3ee17 db62b22343de dbb64cd751c3 dbb82c7465f4 dbbb4bdc4619 dbcff02eeebe dbd7d7c2fd9c dbdb23407627 dbe9d7684c7b dbf01a1038f6 dc0af193f61c dc38867e6155 dc5c09b2798e dc73f15b056e dc76c224679a dc84af9515d8 dc90c796cfe3 dcb2dac12fa3 dcbaa7ad7d4c dd35f6b0a9a8 dd3bd423112c dd791ecf5266 dd8b0059c565 ddb106717dca ddb72b23314a dde2c32c33b4 ddeb658b10a4 de5115154e05 dea7345f98f6 deb1a031d5f0 dec374e53bef ded32a54a9b6 df02f4495a78 df15ad9efbb9 df1d6bffa0ee df49ccda78ba df4bbd0a1e91 df5aac2106d9 df6f62158596 df925261ffc2 df9ae04ddbab e05c3623d98c e05f66a6a463 e07f0e6dde89 e0999c249637 e0bf2bf30cfd e0c31f2ed4fe e0c827b0b9aa e0df0a07c50b e109f6b16d6e e12d4cc84237 e14431c72939 e15c36764087 e239cb0c019c e2a5dcf0539e e2d17c33746a e2d7a2d3152a e2dbb44ec95f e310544ed62f e370a72be3cb e3f7b13fc0b3 e40c29049121 e4cfed781f3d e4dcbf20951c e55474c84305 e5599fcbc888 e55e4f5caa1c e57c1109f671 e5c755526464 e5e885ad1537 e5eddc038dd4 e65f447edbc3 e6690f3a2244 e6793bcb3731 e6af1fd1998c e6c877d2ae25 e738fcea8a05 e790ac117177 e79c9575d05b e79cd2f629b5 e7a48410e535 e7a69b0326aa e7bbef64f96c e7c01c8e3382 e7cdc8823480 e8390e9b2780 e851f004d7bf e85fad9b0784 e88b161e0aa1 e89a47ee22fa e9153b0dcb5f e9394de05221 e946906378dc e9551347c3bd e95a2f0ce97b e97ed8836f58 e9bb3122a0b0 e9c12152ab57 e9f0ac037438 e9f8cd431e81 ea277121e113 ea4f4679096b ea632dbc2f80 ea78a0a78245 ea8521b697ee eaafa4695786 eac0fc65c0fa eac7d11e47ef ead48cab2462 eadd227c6a13 eb0897ff63b7 eb128ba29442 eb17eda48012 eb20a0e184a8 eb29ba61ba09 eb64eab94252 ebad6a3e2b95 ebb944878b3b ebba9f2954a8 ebc4f1d75608 ebcc0465a8cb ec2554421279 ec351d10b595 ec50c6c380f4 ec5ba3fafe06 ec70568761d0 eca320c6ddbe ecc0c2aaf610 ecd36b999bd6 ece18b117a59 ece329fb4737 ecf3e4e042fb ed173d87cf27 ed279c8cf61a ed3556b79237 ed3e3babe77d edb0e0dcfc0c edb4d09eddde edbf5ab2b7af edc8074b8cac edffeb6c448d ee03fe0dcca2 ee2e89cbaf15 ee2f4b6ccae0 ee61b00f1244 ee68041eec10 ee87bf88348d eec9f3824ec0 eed1b1ca0561 eee6750dfa61 eee9c1f4222b ef7e4793fc0a ef98facd0cbb efaddbf9e9da efba218e9c44 efcb23f631db f00c857ff074 f0119dce4306 f0279a582893 f038bca1ab40 f057ed3b31bf f0633e94df52 f0b54b32a6ce f153726b5f0f f158892a8f01 f16cc7686c2e f17e17a317e8 f187ce2ffc66 f1a37c338e8f f1df69ba6fbe f1e277aed42d f1f7acac1d18 f20c89c639ca f21adb368a5d f2284ed9c52b f232e277a558 f263f7febf3e f26427b87325 f279a57f92a9 f2905afcb545 f2dfd9c704af f2e3bf30f658 f34a1f1f1abf f35bbe6a36c9 f368aadd41e0 f38786013cbe f3f768b29c7b f40d5a31931c f40f8bb8c0cf f429dadfec02 f4d380732f5f f4d998f18027 f511ddd39ffd f52b69bbd37b f531bf515e4c f61d5b790666 f63ba5270fe4 f64ea5fcbd0b f6701d521020 f69ba1a51fde f73072810050 f749e14eaf36 f773629657a7 f773e6cfec5c f7b70545ad61 f7e9bd26aca0 f7eba7bdbca5 f7f49530f2ab f7fd11fbe741 f80ef1b2c55f f8435d9e9813 f877d31ae8fc f8c3006313c2 f8fbacbccb70 f909bd69e7df f926d690b885 f92a5a4f6509 f980d0b5b00d f9821fe82f6a f9a72642b160 f9b61bc2330c f9c24a35605c f9c2a34df0f8 f9c4d5e9bcd3 f9cbd4f680b2 f9d46fa3f184 f9d6bc12e034 fa12d15ae666 fa537c08d3b8 fad9a0b82a61 faf1a4d1d15b fafd1a49c486 fba2ee34d2d8 fbf2dbb15084 fbf5eea9cdea fc0b3f94aa81 fc5389c2e046 fc5bde7617d2 fc7c10760a0e fc9e95dbe3e1 fca5f291b8f1 fcc2af9b02c7 fcd6984032a8 fce053b43bd7 fcfa28f76ade fd10201f874a fd3d47f75c95 fd4199a48fc0 fd6fd865e9d3 fd8ad8a69991 fdde29fa0ee6 fe7eaf638f0a fe8724b2a8cf fe89c6ffb4a3 feac192d9dab feaef0e73c5d feefc86ee1bf ff17113efdcc ff178d7e5bd9 ff3952a4c5e2 ff61a63fbc96 ff7eb712d4f5 ff86e8af08fb ffab948dced8 ffb61a463e01 ffd10ec9e16b ffd2f06ae744 ffee974c9d39 '
total_cnt_artic_list = total_cnt_artic_list.split(' ')
total_cnt_artic_list= total_cnt_artic_list[:-1]
print(len(total_cnt_artic_list))


from nsml import DATASET_PATH, DATASET_NAME
from sklearn.metrics import f1_score

# bind
def bind_nsml(model,optimizer, task):
    def save(dir_name, *args, **kwargs):
        os.makedirs(dir_name, exist_ok=True)
        checkpoint_session = ['5_300000','team_62/airush2/1051']  #change
        nsml.load(checkpoint = str(checkpoint_session[0]), session = str(checkpoint_session[1]))
        global model
        model.save_model(os.path.join(dir_name,'model'))

        print('model saved!')
 
    def load(dir_name, *args, **kwargs):
        global model
        from_file = CatBoostRegressor()       #change
        from_file.load_model(os.path.join(dir_name,'model')) #change
        model = from_file.load_model(os.path.join(dir_name,'model'))
        

    def infer(root, phase):
        # checkpoint_session = ['5_300000','team_62/airush2/765']
        # nsml.load(checkpoint = str(checkpoint_session[0]), session = str(checkpoint_session[1]))
        global model 
        return _infer(root, phase, model=model, task=task)

    nsml.bind(save=save, load=load, infer=infer)

def _infer(root, phase, model, task):

    csv_file = os.path.join(root, 'test', 'test_data', 'test_data')
    item = pd.read_csv(csv_file,
                    dtype={
                        'article_id': str,
                        'hh': int, 'gender': str,
                        'age_range': str,
                        'read_article_ids': str
                    }, sep='\t')

    #print('-- model_load completed --')
    # len part
    len_lis = []
    read_article_ids_all = item['read_article_ids'].tolist()
    for i in range(len(item)):
        li = read_article_ids_all[i]
        if type(li) == float:
            len_lis.append(0)
            continue
        len_li = len(li.split(','))
        len_lis.append(len_li)
    item['len']  = len_lis
    item['len_bin']  = pd.qcut(item['len'],6,duplicates='drop')
    
    # read_cnt and total_cnt 

    item_article_list = item['article_id'].tolist()
    #print('add lit_cnt_prob')
    #print(f'len lit_cnt_prob : {len(lit_cnt_prob)}')
    
    rcl = []
    rcp = []
    tcl = []

    for i in range(len(item)):
        cur_article_id = item_article_list[i]
        # read_cnt & prob
        if cur_article_id in total_cnt_artic_list:
            if cur_article_id in read_cnt_artic_list:
                for j in range(len(read_cnt_artic_list)):
                    if(cur_article_id == read_cnt_artic_list[j]):
                        rcl.append(read_cnt_list[j])
                        rcp.append(read_cnt_list[j]/total_cnt_list[j])
                        break
            else :
                rcl.append(0)
                rcp.append(0.0)
                
            for j in range(len(total_cnt_artic_list)):
                if cur_article_id == total_cnt_artic_list[j]:
                    tcl.append(total_cnt_list[j])
                    break
            
        else : 
            # 생전 처음 보는 아티클, 이 경우는 그냥 평균 넣어주자
            print(cur_article_id, 'is not in train dataset')
            rcl.append(4)
            rcp.append(0.06)
            tcl.append(int(np.mean(total_cnt_list)))

    print(f'rcl len : {len(rcl)}')
    print(f'rcp len : {len(rcp)}')
    print(f'tcl len : {len(tcl)}')
    item['rcl'] = rcl
    item['rcp'] = rcp
    item['tcl'] = tcl

    ## gen_age feature
    item['gen_age'] = item['gender'] + item['age_range']

    cols = ['hh', 'gender', 'age_range','len' ,'rcl', 'rcp', 'tcl', 'category_id', 'gen_age', 'cat_in']
    
    item = item[cols]
    item.info()

    # article_id
    #item.article_id = item.article_id.apply(lambda x : 'unknown' if x not in lll else x)
    # hh
    item.hh = item.hh.astype('object')
    a = pd.DataFrame({'hh' : ['unknown'], 'gender': ['unknown'],'age_range' : ['unknown'] , 'len' : [28],'rcl':[4],'rcp':[0.04],'tcl':[20]},index=[len(item)])
    item = item.append(a)
    item.info()
    print('after preprocess')
    item.info()
    print('len_item',len(item))
    """
    resnet_feature_extractor(phase)
    # One hot Encoding
    with open(os.path.join('train_image_features_50.pkl'), 'rb') as handle:
        image_feature_dict = pickle.load(handle)

    
    item['image_feature'] = li
    li = []
    """
    one_hot_encoded_X = pd.get_dummies(item)
    print(one_hot_encoded_X.shape)

    
    predict_list = []
    w = 0.2
    """
    for i in range(1,6):
        d_test = xgb.DMatrix(one_hot_encoded_X)
        print(i)
        if(i%2== 0):
            checkpoint_session = [str(1)+'_1100000','team_62/airush2/582']
        else:
            checkpoint_session = [str(1)+'_2000000','team_62/airush2/582']
        
        nsml.load(checkpoint = str(checkpoint_session[0]), session = str(checkpoint_session[1]))
        print('load completed')
        print(model.get_score())
        xgb_pred = model.predict(d_test)
        predict_list.append(xgb_pred.tolist())
    """
    one_hot_encoded_X = one_hot_encoded_X[:-1]
    print(one_hot_encoded_X.shape)
    d_test = one_hot_encoded_X
    checkpoint_session = ['5_300000','team_62/airush2/1051'] # change 

    #bind_nsml([],[],task)

    nsml.load(checkpoint = str(checkpoint_session[0]), session = str(checkpoint_session[1]))
    #print(model.get_score())

    print('load completed')
    lgb_pred = np.expm1(model.predict(d_test))
    #xgb_pred = model.predict(d_test)
    print(lgb_pred[:100])
    print(lgb_pred[100:200])
    print(lgb_pred[200:300])
    print(lgb_pred[300:400])
    print(lgb_pred[400:500])
    print(type(lgb_pred))
    print(len(lgb_pred))
    xlist = lgb_pred.tolist()
    cnt = 0
    for i in range(len(xlist)):
        xlist[i] = xlist[i] * 0.55
        if (xlist[i] > 0.5):
            cnt+=1
    print(cnt)
    print(np.mean(xlist))
    return xlist
    

    
import glob
def main(args, local):
    
    if args.arch == 'catboost' and args.mode == 'train':
        print('train')
        

    if use_nsml and args.mode == 'train':

        global model
        
        # 765, 621, 828 , 829
        # 756(category)
        bind_nsml([],[],args.task)
        nsml.save("infer")
        print(model)
        checkpoint_session = ['5_300000','team_62/airush2/1051'] #change
        nsml.load(checkpoint = str(checkpoint_session[0]), session = str(checkpoint_session[1]))
        csv_file = os.path.join(DATASET_PATH, 'train', 'train_data', 'train_data')
        item = pd.read_csv(csv_file,
                        dtype={
                            'article_id': str,
                            'hh': int, 'gender': str,
                            'age_range': str,
                            'read_article_ids': str
                        }, sep='\t')
        
        ### article tsv add
        print(f'article.tsv load...')
        article_file = os.path.join(DATASET_PATH, 'train', 'train_data', 'train_data_article.tsv')
        article_df = pd.read_csv(article_file, sep='\t')

        ### article_df & item merge
        article_df = article_df[['article_id', 'category_id']]
        item = pd.merge(item, article_df, how='left', on='article_id')
        item['category_id'] = item['category_id'].fillna(0)
        item['category_id'] = item['category_id'].astype(int)
        ############## cat_in #############
        def get_include(row):
            b = 0
            if row in [14, 10, 1, 3]:
                b = 1
            return b
        
        item['cat_in'] = item['category_id'].apply(get_include)
        item['cat_in'] = item['cat_in'].astype('object')
        
        label_data_path = os.path.join(DATASET_PATH, 'train',
                                os.path.basename(os.path.normpath(csv_file)).split('_')[0] + '_label')
        label = pd.read_csv(label_data_path,
                    dtype={'label': int},
                    sep='\t')
        item['label']  = label

        
        #print('-- model_load completed --')
        # len part
        len_lis = []
        read_article_ids_all = item['read_article_ids'].tolist()
        for i in range(len(item)):
            li = read_article_ids_all[i]
            if type(li) == float:
                len_lis.append(0)
                continue
            len_li = len(li.split(','))
            len_lis.append(len_li)
        item['len']  = len_lis
        item['len_bin']  = pd.qcut(item['len'],6,duplicates='drop')

        item_article_list = item['article_id'].tolist()

        print('clear')

        rcl = []
        rcp = []
        tcl = []

        for i in range(len(item)):
            cur_article_id = item_article_list[i]
            # read_cnt & prob
            if cur_article_id in total_cnt_artic_list:
                if cur_article_id in read_cnt_artic_list:
                    for j in range(len(read_cnt_artic_list)):
                        if(cur_article_id == read_cnt_artic_list[j]):
                            rcl.append(read_cnt_list[j])
                            rcp.append(read_cnt_list[j]/total_cnt_list[j])
                            break
                else :
                    rcl.append(0)
                    rcp.append(0.0)
                    
                for j in range(len(total_cnt_artic_list)):
                    if cur_article_id == total_cnt_artic_list[j]:
                        tcl.append(total_cnt_list[j])
                        break
                
            else : 
                # 생전 처음 보는 아티클, 이 경우는 그냥 평균 넣어주자
                print(cur_article_id, 'is not in train dataset')
                rcl.append(4)
                rcp.append(0.06)
                tcl.append(int(np.mean(total_cnt_list)))

        print(f'rcl len : {len(rcl)}')
        print(f'rcp len : {len(rcp)}')
        print(f'tcl len : {len(tcl)}')
        item['rcl'] = rcl
        item['rcp'] = rcp
        item['tcl'] = tcl

        item['gen_age'] = item['gender'] + item['age_range']


        cols = ['hh', 'gender', 'age_range', 'label','len' ,'rcl', 'rcp', 'tcl', 'category_id', 'gen_age', 'cat_in']  ######change
        print('clear')
        item = item[cols]
        item.info()

        item.hh = item.hh.astype('object')
        
        
        print('after preprocess')
        item.info()
        print('len_item',len(item))


        checkpoint_session_1 = ['4_100000','team_62/airush2/925']
        checkpoint_session_2 = ['3_100000','team_62/airush2/1051']
        
        inference_df = item.sample(n = 100000,random_state = 42)
        y_true = inference_df['label']
        y_true = [int(x) for x in y_true]
        x = inference_df.drop(['label'],axis=1)
        x_1 = x.copy()
        x_2 = x.copy()

        
        cols1 = ['hh', 'gender', 'age_range','len' ,'rcl', 'rcp', 'tcl']
        cols2 = ['hh', 'gender', 'age_range','len' ,'rcl', 'rcp', 'tcl', 'category_id', 'gen_age', 'cat_in']
        x_1 = x_1[cols1]
        x_2 = x_2[cols2]
        a_1 = pd.DataFrame({'hh' : ['unknown'], 'gender': ['unknown'],'age_range' : ['unknown'] , 'len' : [28],'rcl':[4],'rcp':[0.04],'tcl':[20]},index=[len(x_1)])
        a_2 = pd.DataFrame({'hh' : ['unknown'], 'gender': ['unknown'],'age_range' : ['unknown'] , 'len' : [28],'rcl':[4],'rcp':[0.04],'tcl':[20],'cat_in':[0],'category_id':[0]},index=[len(x_2)])
        x_1 = x_1.append(a_1)
        x_2 = x_2.append(a_2)
            
        x_1_onehot = pd.get_dummies(x_1)
        x_2_onehot = pd.get_dummies(x_2)
        
        x_1_onehot = x_1_onehot[:-1]
        x_2_onehot = x_2_onehot[:-1]

        d_1_test  = x_1_onehot 
        d_2_test = x_2_onehot

        for i in range(2):
            if(i == 0):
                nsml.load(checkpoint = str(checkpoint_session_1[0]),session =str(checkpoint_session_1[1]))
                xgb_pred = np.expm1(model.predict(d_1_test))
                xlist_1 = xgb_pred.tolist()
                
            elif(i == 1):
                nsml.load(checkpoint = str(checkpoint_session_2[0]),session = str(checkpoint_session_2[1]))
                xgb_pred = np.expm1(model.predict(d_2_test))
                xlist_2 = xgb_pred.tolist()
        
        xlist_all = []
        for i in range(len(xlist_1)):
            xlist_all.append((xlist_1[i] + xlist_2[i])/2)

        print(f'total xlist_all : {len(xlist_all)}')
        
        weight_list  = list(range (10, 100, 1))
        weight_list = [ x/100 for x in weight_list]   
        print(weight_list)
        print("let's find best weight for this model!!!")
        max_score = 0
        max_weight = 0
        cnt = 0
        print(f'y_true : {len(y_true)}')
        for wl in weight_list:
            x_pred = []
            for i in range(len(xlist_all)):
                x_pred.append(xlist_all[i] * wl)
                if (x_pred[i] > 0.5):
                    cnt+=1
                    x_pred[i] = 1
                else : 
                    x_pred[i] = 0
            cnt +=1
            current_score = f1_score(y_true=y_true, y_pred=x_pred, pos_label=1)
            print(f'current wl : {wl} current score : {current_score}')
            if(max_score < current_score):
                max_score = current_score
                max_weight = wl
        print(f'max score {max_score}, max wl {max_weight}')

    if args.mode == 'test':
        b = xgb.Booster()
        bind_nsml(b,[],args.task)
        checkpoint_session = ['1_100000','team_62/airush2/1051']
        nsml.load(checkpoint = str(checkpoint_session[0]), session = str(checkpoint_session[1]))
        print('end')
   
    if args.pause:
        nsml.paused(scope=local)
        #print(root)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--num_workers', type=int, default=4)  # not work. check built_in_args in data_local_loader.py

    parser.add_argument('--train_path', type=str, default='train/train_data/train_data')
    parser.add_argument('--test_path', type=str, default='test/test_data/test_data')
    parser.add_argument('--test_tf', type=str, default='[transforms.Resize((456, 232))]')
    parser.add_argument('--train_tf', type=str, default='[transforms.Resize((456, 232))]')

    parser.add_argument('--use_sex', type=bool, default=True)
    parser.add_argument('--use_age', type=bool, default=True)
    parser.add_argument('--use_exposed_time', type=bool, default=True)
    parser.add_argument('--use_read_history', type=bool, default=False)

    parser.add_argument('--num_epochs', type=int, default=1)
    parser.add_argument('--batch_size', type=int, default=2048)
    parser.add_argument('--num_classes', type=int, default=1)
    parser.add_argument('--task', type=str, default='ctrpred')
    parser.add_argument('--lr', type=float, default=1e-3)
    parser.add_argument('--print_every', type=int, default=10)
    parser.add_argument('--save_epoch_every', type=int, default=2)
    parser.add_argument('--save_step_every', type=int, default=1000)

    parser.add_argument('--use_gpu', type=bool, default=True)
    parser.add_argument("--arch", type=str, default="catboost")

    # reserved for nsml
    parser.add_argument("--mode", type=str, default="train")
    parser.add_argument("--iteration", type=str, default='0')
    parser.add_argument("--pause", type=int, default=0)

    parser.add_argument('--dry_run', type=bool, default=False)

    config = parser.parse_args()
    main(config , local = locals())
